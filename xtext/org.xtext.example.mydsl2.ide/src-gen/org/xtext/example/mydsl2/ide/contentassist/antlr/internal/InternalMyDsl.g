/*
 * generated by Xtext 2.32.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl2.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl2.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl2.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRobot
entryRuleRobot
:
{ before(grammarAccess.getRobotRule()); }
	 ruleRobot
{ after(grammarAccess.getRobotRule()); } 
	 EOF 
;

// Rule Robot
ruleRobot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRobotAccess().getGroup()); }
		(rule__Robot__Group__0)
		{ after(grammarAccess.getRobotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruction
entryRuleInstruction
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
		(rule__Instruction__Alternatives)
		{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeClass
entryRuleTypeClass
:
{ before(grammarAccess.getTypeClassRule()); }
	 ruleTypeClass
{ after(grammarAccess.getTypeClassRule()); } 
	 EOF 
;

// Rule TypeClass
ruleTypeClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeClassAccess().getAlternatives()); }
		(rule__TypeClass__Alternatives)
		{ after(grammarAccess.getTypeClassAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDistance
entryRuleDistance
:
{ before(grammarAccess.getDistanceRule()); }
	 ruleDistance
{ after(grammarAccess.getDistanceRule()); } 
	 EOF 
;

// Rule Distance
ruleDistance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDistanceAccess().getAlternatives()); }
		(rule__Distance__Alternatives)
		{ after(grammarAccess.getDistanceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCall
entryRuleCall
:
{ before(grammarAccess.getCallRule()); }
	 ruleCall
{ after(grammarAccess.getCallRule()); } 
	 EOF 
;

// Rule Call
ruleCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallAccess().getAlternatives()); }
		(rule__Call__Alternatives)
		{ after(grammarAccess.getCallAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionBase
entryRuleExpressionBase
:
{ before(grammarAccess.getExpressionBaseRule()); }
	 ruleExpressionBase
{ after(grammarAccess.getExpressionBaseRule()); } 
	 EOF 
;

// Rule ExpressionBase
ruleExpressionBase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionBaseAccess().getAlternatives()); }
		(rule__ExpressionBase__Alternatives)
		{ after(grammarAccess.getExpressionBaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRotateCommand
entryRuleRotateCommand
:
{ before(grammarAccess.getRotateCommandRule()); }
	 ruleRotateCommand
{ after(grammarAccess.getRotateCommandRule()); } 
	 EOF 
;

// Rule RotateCommand
ruleRotateCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRotateCommandAccess().getGroup()); }
		(rule__RotateCommand__Group__0)
		{ after(grammarAccess.getRotateCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirectionCommand
entryRuleDirectionCommand
:
{ before(grammarAccess.getDirectionCommandRule()); }
	 ruleDirectionCommand
{ after(grammarAccess.getDirectionCommandRule()); } 
	 EOF 
;

// Rule DirectionCommand
ruleDirectionCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectionCommandAccess().getGroup()); }
		(rule__DirectionCommand__Group__0)
		{ after(grammarAccess.getDirectionCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpeedCommand
entryRuleSpeedCommand
:
{ before(grammarAccess.getSpeedCommandRule()); }
	 ruleSpeedCommand
{ after(grammarAccess.getSpeedCommandRule()); } 
	 EOF 
;

// Rule SpeedCommand
ruleSpeedCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpeedCommandAccess().getGroup()); }
		(rule__SpeedCommand__Group__0)
		{ after(grammarAccess.getSpeedCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDistanceSensorCommand
entryRuleDistanceSensorCommand
:
{ before(grammarAccess.getDistanceSensorCommandRule()); }
	 ruleDistanceSensorCommand
{ after(grammarAccess.getDistanceSensorCommandRule()); } 
	 EOF 
;

// Rule DistanceSensorCommand
ruleDistanceSensorCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDistanceSensorCommandAccess().getGroup()); }
		(rule__DistanceSensorCommand__Group__0)
		{ after(grammarAccess.getDistanceSensorCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeSensorCommand
entryRuleTimeSensorCommand
:
{ before(grammarAccess.getTimeSensorCommandRule()); }
	 ruleTimeSensorCommand
{ after(grammarAccess.getTimeSensorCommandRule()); } 
	 EOF 
;

// Rule TimeSensorCommand
ruleTimeSensorCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeSensorCommandAccess().getGroup()); }
		(rule__TimeSensorCommand__Group__0)
		{ after(grammarAccess.getTimeSensorCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExp_Impl
entryRuleBooleanExp_Impl
:
{ before(grammarAccess.getBooleanExp_ImplRule()); }
	 ruleBooleanExp_Impl
{ after(grammarAccess.getBooleanExp_ImplRule()); } 
	 EOF 
;

// Rule BooleanExp_Impl
ruleBooleanExp_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExp_ImplAccess().getGroup()); }
		(rule__BooleanExp_Impl__Group__0)
		{ after(grammarAccess.getBooleanExp_ImplAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusMinus
entryRulePlusMinus
:
{ before(grammarAccess.getPlusMinusRule()); }
	 rulePlusMinus
{ after(grammarAccess.getPlusMinusRule()); } 
	 EOF 
;

// Rule PlusMinus
rulePlusMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusMinusAccess().getGroup()); }
		(rule__PlusMinus__Group__0)
		{ after(grammarAccess.getPlusMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultDiv
entryRuleMultDiv
:
{ before(grammarAccess.getMultDivRule()); }
	 ruleMultDiv
{ after(grammarAccess.getMultDivRule()); } 
	 EOF 
;

// Rule MultDiv
ruleMultDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultDivAccess().getGroup()); }
		(rule__MultDiv__Group__0)
		{ after(grammarAccess.getMultDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExprAri
entryRulePrimaryExprAri
:
{ before(grammarAccess.getPrimaryExprAriRule()); }
	 rulePrimaryExprAri
{ after(grammarAccess.getPrimaryExprAriRule()); } 
	 EOF 
;

// Rule PrimaryExprAri
rulePrimaryExprAri 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprAriAccess().getGroup()); }
		(rule__PrimaryExprAri__Group__0)
		{ after(grammarAccess.getPrimaryExprAriAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclarationVariable
entryRuleDeclarationVariable
:
{ before(grammarAccess.getDeclarationVariableRule()); }
	 ruleDeclarationVariable
{ after(grammarAccess.getDeclarationVariableRule()); } 
	 EOF 
;

// Rule DeclarationVariable
ruleDeclarationVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationVariableAccess().getGroup()); }
		(rule__DeclarationVariable__Group__0)
		{ after(grammarAccess.getDeclarationVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLOOP
entryRuleLOOP
:
{ before(grammarAccess.getLOOPRule()); }
	 ruleLOOP
{ after(grammarAccess.getLOOPRule()); } 
	 EOF 
;

// Rule LOOP
ruleLOOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLOOPAccess().getGroup()); }
		(rule__LOOP__Group__0)
		{ after(grammarAccess.getLOOPAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIF
entryRuleIF
:
{ before(grammarAccess.getIFRule()); }
	 ruleIF
{ after(grammarAccess.getIFRule()); } 
	 EOF 
;

// Rule IF
ruleIF 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIFAccess().getGroup()); }
		(rule__IF__Group__0)
		{ after(grammarAccess.getIFAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCallVariable
entryRuleCallVariable
:
{ before(grammarAccess.getCallVariableRule()); }
	 ruleCallVariable
{ after(grammarAccess.getCallVariableRule()); } 
	 EOF 
;

// Rule CallVariable
ruleCallVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallVariableAccess().getGroup()); }
		(rule__CallVariable__Group__0)
		{ after(grammarAccess.getCallVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCallFunction
entryRuleCallFunction
:
{ before(grammarAccess.getCallFunctionRule()); }
	 ruleCallFunction
{ after(grammarAccess.getCallFunctionRule()); } 
	 EOF 
;

// Rule CallFunction
ruleCallFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallFunctionAccess().getGroup()); }
		(rule__CallFunction__Group__0)
		{ after(grammarAccess.getCallFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAffectation
entryRuleAffectation
:
{ before(grammarAccess.getAffectationRule()); }
	 ruleAffectation
{ after(grammarAccess.getAffectationRule()); } 
	 EOF 
;

// Rule Affectation
ruleAffectation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAffectationAccess().getGroup()); }
		(rule__Affectation__Group__0)
		{ after(grammarAccess.getAffectationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExprBool
entryRulePrimaryExprBool
:
{ before(grammarAccess.getPrimaryExprBoolRule()); }
	 rulePrimaryExprBool
{ after(grammarAccess.getPrimaryExprBoolRule()); } 
	 EOF 
;

// Rule PrimaryExprBool
rulePrimaryExprBool 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprBoolAccess().getGroup()); }
		(rule__PrimaryExprBool__Group__0)
		{ after(grammarAccess.getPrimaryExprBoolAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNot
entryRuleNot
:
{ before(grammarAccess.getNotRule()); }
	 ruleNot
{ after(grammarAccess.getNotRule()); } 
	 EOF 
;

// Rule Not
ruleNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotAccess().getGroup()); }
		(rule__Not__Group__0)
		{ after(grammarAccess.getNotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquals
entryRuleEquals
:
{ before(grammarAccess.getEqualsRule()); }
	 ruleEquals
{ after(grammarAccess.getEqualsRule()); } 
	 EOF 
;

// Rule Equals
ruleEquals 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualsAccess().getGroup()); }
		(rule__Equals__Group__0)
		{ after(grammarAccess.getEqualsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusMinusDistance
entryRulePlusMinusDistance
:
{ before(grammarAccess.getPlusMinusDistanceRule()); }
	 rulePlusMinusDistance
{ after(grammarAccess.getPlusMinusDistanceRule()); } 
	 EOF 
;

// Rule PlusMinusDistance
rulePlusMinusDistance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusMinusDistanceAccess().getGroup()); }
		(rule__PlusMinusDistance__Group__0)
		{ after(grammarAccess.getPlusMinusDistanceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultDivDistance
entryRuleMultDivDistance
:
{ before(grammarAccess.getMultDivDistanceRule()); }
	 ruleMultDivDistance
{ after(grammarAccess.getMultDivDistanceRule()); } 
	 EOF 
;

// Rule MultDivDistance
ruleMultDivDistance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultDivDistanceAccess().getGroup()); }
		(rule__MultDivDistance__Group__0)
		{ after(grammarAccess.getMultDivDistanceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExprDistance
entryRulePrimaryExprDistance
:
{ before(grammarAccess.getPrimaryExprDistanceRule()); }
	 rulePrimaryExprDistance
{ after(grammarAccess.getPrimaryExprDistanceRule()); } 
	 EOF 
;

// Rule PrimaryExprDistance
rulePrimaryExprDistance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprDistanceAccess().getGroup()); }
		(rule__PrimaryExprDistance__Group__0)
		{ after(grammarAccess.getPrimaryExprDistanceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusMinusTime
entryRulePlusMinusTime
:
{ before(grammarAccess.getPlusMinusTimeRule()); }
	 rulePlusMinusTime
{ after(grammarAccess.getPlusMinusTimeRule()); } 
	 EOF 
;

// Rule PlusMinusTime
rulePlusMinusTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusMinusTimeAccess().getGroup()); }
		(rule__PlusMinusTime__Group__0)
		{ after(grammarAccess.getPlusMinusTimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultDiveTime
entryRuleMultDiveTime
:
{ before(grammarAccess.getMultDiveTimeRule()); }
	 ruleMultDiveTime
{ after(grammarAccess.getMultDiveTimeRule()); } 
	 EOF 
;

// Rule MultDiveTime
ruleMultDiveTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultDiveTimeAccess().getGroup()); }
		(rule__MultDiveTime__Group__0)
		{ after(grammarAccess.getMultDiveTimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExprTime
entryRulePrimaryExprTime
:
{ before(grammarAccess.getPrimaryExprTimeRule()); }
	 rulePrimaryExprTime
{ after(grammarAccess.getPrimaryExprTimeRule()); } 
	 EOF 
;

// Rule PrimaryExprTime
rulePrimaryExprTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprTimeAccess().getGroup()); }
		(rule__PrimaryExprTime__Group__0)
		{ after(grammarAccess.getPrimaryExprTimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparaisonDistance
entryRuleComparaisonDistance
:
{ before(grammarAccess.getComparaisonDistanceRule()); }
	 ruleComparaisonDistance
{ after(grammarAccess.getComparaisonDistanceRule()); } 
	 EOF 
;

// Rule ComparaisonDistance
ruleComparaisonDistance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparaisonDistanceAccess().getGroup()); }
		(rule__ComparaisonDistance__Group__0)
		{ after(grammarAccess.getComparaisonDistanceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparaisonTime
entryRuleComparaisonTime
:
{ before(grammarAccess.getComparaisonTimeRule()); }
	 ruleComparaisonTime
{ after(grammarAccess.getComparaisonTimeRule()); } 
	 EOF 
;

// Rule ComparaisonTime
ruleComparaisonTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparaisonTimeAccess().getGroup()); }
		(rule__ComparaisonTime__Group__0)
		{ after(grammarAccess.getComparaisonTimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparaisonAri
entryRuleComparaisonAri
:
{ before(grammarAccess.getComparaisonAriRule()); }
	 ruleComparaisonAri
{ after(grammarAccess.getComparaisonAriRule()); } 
	 EOF 
;

// Rule ComparaisonAri
ruleComparaisonAri 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparaisonAriAccess().getGroup()); }
		(rule__ComparaisonAri__Group__0)
		{ after(grammarAccess.getComparaisonAriAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEDouble
entryRuleEDouble
:
{ before(grammarAccess.getEDoubleRule()); }
	 ruleEDouble
{ after(grammarAccess.getEDoubleRule()); } 
	 EOF 
;

// Rule EDouble
ruleEDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEDoubleAccess().getGroup()); }
		(rule__EDouble__Group__0)
		{ after(grammarAccess.getEDoubleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCM
entryRuleCM
:
{ before(grammarAccess.getCMRule()); }
	 ruleCM
{ after(grammarAccess.getCMRule()); } 
	 EOF 
;

// Rule CM
ruleCM 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCMAccess().getGroup()); }
		(rule__CM__Group__0)
		{ after(grammarAccess.getCMAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemm
entryRulemm
:
{ before(grammarAccess.getMmRule()); }
	 rulemm
{ after(grammarAccess.getMmRule()); } 
	 EOF 
;

// Rule mm
rulemm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMmAccess().getGroup()); }
		(rule__Mm__Group__0)
		{ after(grammarAccess.getMmAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTime
entryRuleTime
:
{ before(grammarAccess.getTimeRule()); }
	 ruleTime
{ after(grammarAccess.getTimeRule()); } 
	 EOF 
;

// Rule Time
ruleTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeAccess().getGroup()); }
		(rule__Time__Group__0)
		{ after(grammarAccess.getTimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanType
entryRuleBooleanType
:
{ before(grammarAccess.getBooleanTypeRule()); }
	 ruleBooleanType
{ after(grammarAccess.getBooleanTypeRule()); } 
	 EOF 
;

// Rule BooleanType
ruleBooleanType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanTypeAccess().getGroup()); }
		(rule__BooleanType__Group__0)
		{ after(grammarAccess.getBooleanTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberType
entryRuleNumberType
:
{ before(grammarAccess.getNumberTypeRule()); }
	 ruleNumberType
{ after(grammarAccess.getNumberTypeRule()); } 
	 EOF 
;

// Rule NumberType
ruleNumberType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberTypeAccess().getGroup()); }
		(rule__NumberType__Group__0)
		{ after(grammarAccess.getNumberTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getRotateCommandParserRuleCall_0()); }
		ruleRotateCommand
		{ after(grammarAccess.getInstructionAccess().getRotateCommandParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getDirectionCommandParserRuleCall_1()); }
		ruleDirectionCommand
		{ after(grammarAccess.getInstructionAccess().getDirectionCommandParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getSpeedCommandParserRuleCall_2()); }
		ruleSpeedCommand
		{ after(grammarAccess.getInstructionAccess().getSpeedCommandParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getDistanceSensorCommandParserRuleCall_3()); }
		ruleDistanceSensorCommand
		{ after(grammarAccess.getInstructionAccess().getDistanceSensorCommandParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getTimeSensorCommandParserRuleCall_4()); }
		ruleTimeSensorCommand
		{ after(grammarAccess.getInstructionAccess().getTimeSensorCommandParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getBooleanExp_ImplParserRuleCall_5()); }
		ruleBooleanExp_Impl
		{ after(grammarAccess.getInstructionAccess().getBooleanExp_ImplParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getPlusMinusParserRuleCall_6()); }
		rulePlusMinus
		{ after(grammarAccess.getInstructionAccess().getPlusMinusParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getMultDivParserRuleCall_7()); }
		ruleMultDiv
		{ after(grammarAccess.getInstructionAccess().getMultDivParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getPrimaryExprAriParserRuleCall_8()); }
		rulePrimaryExprAri
		{ after(grammarAccess.getInstructionAccess().getPrimaryExprAriParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getDeclarationVariableParserRuleCall_9()); }
		ruleDeclarationVariable
		{ after(grammarAccess.getInstructionAccess().getDeclarationVariableParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getLOOPParserRuleCall_10()); }
		ruleLOOP
		{ after(grammarAccess.getInstructionAccess().getLOOPParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getIFParserRuleCall_11()); }
		ruleIF
		{ after(grammarAccess.getInstructionAccess().getIFParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getCallVariableParserRuleCall_12()); }
		ruleCallVariable
		{ after(grammarAccess.getInstructionAccess().getCallVariableParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getCallFunctionParserRuleCall_13()); }
		ruleCallFunction
		{ after(grammarAccess.getInstructionAccess().getCallFunctionParserRuleCall_13()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getAffectationParserRuleCall_14()); }
		ruleAffectation
		{ after(grammarAccess.getInstructionAccess().getAffectationParserRuleCall_14()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getPrimaryExprBoolParserRuleCall_15()); }
		rulePrimaryExprBool
		{ after(grammarAccess.getInstructionAccess().getPrimaryExprBoolParserRuleCall_15()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getAndParserRuleCall_16()); }
		ruleAnd
		{ after(grammarAccess.getInstructionAccess().getAndParserRuleCall_16()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getOrParserRuleCall_17()); }
		ruleOr
		{ after(grammarAccess.getInstructionAccess().getOrParserRuleCall_17()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getNotParserRuleCall_18()); }
		ruleNot
		{ after(grammarAccess.getInstructionAccess().getNotParserRuleCall_18()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getEqualsParserRuleCall_19()); }
		ruleEquals
		{ after(grammarAccess.getInstructionAccess().getEqualsParserRuleCall_19()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getPlusMinusDistanceParserRuleCall_20()); }
		rulePlusMinusDistance
		{ after(grammarAccess.getInstructionAccess().getPlusMinusDistanceParserRuleCall_20()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getMultDivDistanceParserRuleCall_21()); }
		ruleMultDivDistance
		{ after(grammarAccess.getInstructionAccess().getMultDivDistanceParserRuleCall_21()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getPrimaryExprDistanceParserRuleCall_22()); }
		rulePrimaryExprDistance
		{ after(grammarAccess.getInstructionAccess().getPrimaryExprDistanceParserRuleCall_22()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getPlusMinusTimeParserRuleCall_23()); }
		rulePlusMinusTime
		{ after(grammarAccess.getInstructionAccess().getPlusMinusTimeParserRuleCall_23()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getMultDiveTimeParserRuleCall_24()); }
		ruleMultDiveTime
		{ after(grammarAccess.getInstructionAccess().getMultDiveTimeParserRuleCall_24()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getPrimaryExprTimeParserRuleCall_25()); }
		rulePrimaryExprTime
		{ after(grammarAccess.getInstructionAccess().getPrimaryExprTimeParserRuleCall_25()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getComparaisonDistanceParserRuleCall_26()); }
		ruleComparaisonDistance
		{ after(grammarAccess.getInstructionAccess().getComparaisonDistanceParserRuleCall_26()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getComparaisonTimeParserRuleCall_27()); }
		ruleComparaisonTime
		{ after(grammarAccess.getInstructionAccess().getComparaisonTimeParserRuleCall_27()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getComparaisonAriParserRuleCall_28()); }
		ruleComparaisonAri
		{ after(grammarAccess.getInstructionAccess().getComparaisonAriParserRuleCall_28()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeClass__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeClassAccess().getCMParserRuleCall_0()); }
		ruleCM
		{ after(grammarAccess.getTypeClassAccess().getCMParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeClassAccess().getMmParserRuleCall_1()); }
		rulemm
		{ after(grammarAccess.getTypeClassAccess().getMmParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeClassAccess().getBooleanTypeParserRuleCall_2()); }
		ruleBooleanType
		{ after(grammarAccess.getTypeClassAccess().getBooleanTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeClassAccess().getNumberTypeParserRuleCall_3()); }
		ruleNumberType
		{ after(grammarAccess.getTypeClassAccess().getNumberTypeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeClassAccess().getTimeParserRuleCall_4()); }
		ruleTime
		{ after(grammarAccess.getTypeClassAccess().getTimeParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDistanceAccess().getCMParserRuleCall_0()); }
		ruleCM
		{ after(grammarAccess.getDistanceAccess().getCMParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDistanceAccess().getMmParserRuleCall_1()); }
		rulemm
		{ after(grammarAccess.getDistanceAccess().getMmParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallAccess().getCallVariableParserRuleCall_0()); }
		ruleCallVariable
		{ after(grammarAccess.getCallAccess().getCallVariableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCallAccess().getCallFunctionParserRuleCall_1()); }
		ruleCallFunction
		{ after(grammarAccess.getCallAccess().getCallFunctionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionBaseAccess().getBooleanExp_ImplParserRuleCall_0()); }
		ruleBooleanExp_Impl
		{ after(grammarAccess.getExpressionBaseAccess().getBooleanExp_ImplParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getPlusMinusParserRuleCall_1()); }
		rulePlusMinus
		{ after(grammarAccess.getExpressionBaseAccess().getPlusMinusParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getMultDivParserRuleCall_2()); }
		ruleMultDiv
		{ after(grammarAccess.getExpressionBaseAccess().getMultDivParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getPrimaryExprAriParserRuleCall_3()); }
		rulePrimaryExprAri
		{ after(grammarAccess.getExpressionBaseAccess().getPrimaryExprAriParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getCallVariableParserRuleCall_4()); }
		ruleCallVariable
		{ after(grammarAccess.getExpressionBaseAccess().getCallVariableParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getCallFunctionParserRuleCall_5()); }
		ruleCallFunction
		{ after(grammarAccess.getExpressionBaseAccess().getCallFunctionParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getAffectationParserRuleCall_6()); }
		ruleAffectation
		{ after(grammarAccess.getExpressionBaseAccess().getAffectationParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getPrimaryExprBoolParserRuleCall_7()); }
		rulePrimaryExprBool
		{ after(grammarAccess.getExpressionBaseAccess().getPrimaryExprBoolParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getAndParserRuleCall_8()); }
		ruleAnd
		{ after(grammarAccess.getExpressionBaseAccess().getAndParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getOrParserRuleCall_9()); }
		ruleOr
		{ after(grammarAccess.getExpressionBaseAccess().getOrParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getNotParserRuleCall_10()); }
		ruleNot
		{ after(grammarAccess.getExpressionBaseAccess().getNotParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getEqualsParserRuleCall_11()); }
		ruleEquals
		{ after(grammarAccess.getExpressionBaseAccess().getEqualsParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getPlusMinusDistanceParserRuleCall_12()); }
		rulePlusMinusDistance
		{ after(grammarAccess.getExpressionBaseAccess().getPlusMinusDistanceParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getMultDivDistanceParserRuleCall_13()); }
		ruleMultDivDistance
		{ after(grammarAccess.getExpressionBaseAccess().getMultDivDistanceParserRuleCall_13()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getPrimaryExprDistanceParserRuleCall_14()); }
		rulePrimaryExprDistance
		{ after(grammarAccess.getExpressionBaseAccess().getPrimaryExprDistanceParserRuleCall_14()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getPlusMinusTimeParserRuleCall_15()); }
		rulePlusMinusTime
		{ after(grammarAccess.getExpressionBaseAccess().getPlusMinusTimeParserRuleCall_15()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getMultDiveTimeParserRuleCall_16()); }
		ruleMultDiveTime
		{ after(grammarAccess.getExpressionBaseAccess().getMultDiveTimeParserRuleCall_16()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getPrimaryExprTimeParserRuleCall_17()); }
		rulePrimaryExprTime
		{ after(grammarAccess.getExpressionBaseAccess().getPrimaryExprTimeParserRuleCall_17()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getComparaisonDistanceParserRuleCall_18()); }
		ruleComparaisonDistance
		{ after(grammarAccess.getExpressionBaseAccess().getComparaisonDistanceParserRuleCall_18()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getComparaisonTimeParserRuleCall_19()); }
		ruleComparaisonTime
		{ after(grammarAccess.getExpressionBaseAccess().getComparaisonTimeParserRuleCall_19()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBaseAccess().getComparaisonAriParserRuleCall_20()); }
		ruleComparaisonAri
		{ after(grammarAccess.getExpressionBaseAccess().getComparaisonAriParserRuleCall_20()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getBooleanExp_ImplParserRuleCall_0()); }
		ruleBooleanExp_Impl
		{ after(grammarAccess.getExpressionAccess().getBooleanExp_ImplParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getPlusMinusParserRuleCall_1()); }
		rulePlusMinus
		{ after(grammarAccess.getExpressionAccess().getPlusMinusParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getMultDivParserRuleCall_2()); }
		ruleMultDiv
		{ after(grammarAccess.getExpressionAccess().getMultDivParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getPrimaryExprAriParserRuleCall_3()); }
		rulePrimaryExprAri
		{ after(grammarAccess.getExpressionAccess().getPrimaryExprAriParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getPrimaryExprBoolParserRuleCall_4()); }
		rulePrimaryExprBool
		{ after(grammarAccess.getExpressionAccess().getPrimaryExprBoolParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getAndParserRuleCall_5()); }
		ruleAnd
		{ after(grammarAccess.getExpressionAccess().getAndParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getOrParserRuleCall_6()); }
		ruleOr
		{ after(grammarAccess.getExpressionAccess().getOrParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getNotParserRuleCall_7()); }
		ruleNot
		{ after(grammarAccess.getExpressionAccess().getNotParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getEqualsParserRuleCall_8()); }
		ruleEquals
		{ after(grammarAccess.getExpressionAccess().getEqualsParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getPlusMinusDistanceParserRuleCall_9()); }
		rulePlusMinusDistance
		{ after(grammarAccess.getExpressionAccess().getPlusMinusDistanceParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getMultDivDistanceParserRuleCall_10()); }
		ruleMultDivDistance
		{ after(grammarAccess.getExpressionAccess().getMultDivDistanceParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getPrimaryExprDistanceParserRuleCall_11()); }
		rulePrimaryExprDistance
		{ after(grammarAccess.getExpressionAccess().getPrimaryExprDistanceParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getPlusMinusTimeParserRuleCall_12()); }
		rulePlusMinusTime
		{ after(grammarAccess.getExpressionAccess().getPlusMinusTimeParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getMultDiveTimeParserRuleCall_13()); }
		ruleMultDiveTime
		{ after(grammarAccess.getExpressionAccess().getMultDiveTimeParserRuleCall_13()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getPrimaryExprTimeParserRuleCall_14()); }
		rulePrimaryExprTime
		{ after(grammarAccess.getExpressionAccess().getPrimaryExprTimeParserRuleCall_14()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getComparaisonDistanceParserRuleCall_15()); }
		ruleComparaisonDistance
		{ after(grammarAccess.getExpressionAccess().getComparaisonDistanceParserRuleCall_15()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getComparaisonTimeParserRuleCall_16()); }
		ruleComparaisonTime
		{ after(grammarAccess.getExpressionAccess().getComparaisonTimeParserRuleCall_16()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getComparaisonAriParserRuleCall_17()); }
		ruleComparaisonAri
		{ after(grammarAccess.getExpressionAccess().getComparaisonAriParserRuleCall_17()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Alternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEDoubleAccess().getEKeyword_4_0_0()); }
		'E'
		{ after(grammarAccess.getEDoubleAccess().getEKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEDoubleAccess().getEKeyword_4_0_1()); }
		'e'
		{ after(grammarAccess.getEDoubleAccess().getEKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__0__Impl
	rule__Robot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRobotAction_0()); }
	()
	{ after(grammarAccess.getRobotAccess().getRobotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__1__Impl
	rule__Robot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRobotKeyword_1()); }
	'Robot'
	{ after(grammarAccess.getRobotAccess().getRobotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__2__Impl
	rule__Robot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__3__Impl
	rule__Robot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getGroup_3()); }
	(rule__Robot__Group_3__0)?
	{ after(grammarAccess.getRobotAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_3__0__Impl
	rule__Robot__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getFunctionKeyword_3_0()); }
	'function'
	{ after(grammarAccess.getRobotAccess().getFunctionKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_3__1__Impl
	rule__Robot__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_3_1()); }
	'{'
	{ after(grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_3__2__Impl
	rule__Robot__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getFunctionAssignment_3_2()); }
	(rule__Robot__FunctionAssignment_3_2)
	{ after(grammarAccess.getRobotAccess().getFunctionAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_3__3__Impl
	rule__Robot__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getGroup_3_3()); }
	(rule__Robot__Group_3_3__0)*
	{ after(grammarAccess.getRobotAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_3_4()); }
	'}'
	{ after(grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_3_3__0__Impl
	rule__Robot__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getCommaKeyword_3_3_0()); }
	','
	{ after(grammarAccess.getRobotAccess().getCommaKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getFunctionAssignment_3_3_1()); }
	(rule__Robot__FunctionAssignment_3_3_1)
	{ after(grammarAccess.getRobotAccess().getFunctionAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
	()
	{ after(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_1()); }
	'Function'
	{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_3()); }
	(rule__Function__Group_3__0)?
	{ after(grammarAccess.getFunctionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_4()); }
	(rule__Function__Group_4__0)?
	{ after(grammarAccess.getFunctionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__5__Impl
	rule__Function__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_5()); }
	(rule__Function__Group_5__0)?
	{ after(grammarAccess.getFunctionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__0__Impl
	rule__Function__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getInstructionKeyword_3_0()); }
	'instruction'
	{ after(grammarAccess.getFunctionAccess().getInstructionKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__1__Impl
	rule__Function__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_3_1()); }
	'{'
	{ after(grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__2__Impl
	rule__Function__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getInstructionAssignment_3_2()); }
	(rule__Function__InstructionAssignment_3_2)
	{ after(grammarAccess.getFunctionAccess().getInstructionAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__3__Impl
	rule__Function__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_3_3()); }
	(rule__Function__Group_3_3__0)*
	{ after(grammarAccess.getFunctionAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_3_4()); }
	'}'
	{ after(grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3_3__0__Impl
	rule__Function__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getCommaKeyword_3_3_0()); }
	','
	{ after(grammarAccess.getFunctionAccess().getCommaKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getInstructionAssignment_3_3_1()); }
	(rule__Function__InstructionAssignment_3_3_1)
	{ after(grammarAccess.getFunctionAccess().getInstructionAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4__0__Impl
	rule__Function__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getParametersKeyword_4_0()); }
	'parameters'
	{ after(grammarAccess.getFunctionAccess().getParametersKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4__1__Impl
	rule__Function__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4__2__Impl
	rule__Function__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getParametersAssignment_4_2()); }
	(rule__Function__ParametersAssignment_4_2)
	{ after(grammarAccess.getFunctionAccess().getParametersAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4__3__Impl
	rule__Function__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_4_3()); }
	(rule__Function__Group_4_3__0)*
	{ after(grammarAccess.getFunctionAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4_3__0__Impl
	rule__Function__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getFunctionAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getParametersAssignment_4_3_1()); }
	(rule__Function__ParametersAssignment_4_3_1)
	{ after(grammarAccess.getFunctionAccess().getParametersAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_5__0__Impl
	rule__Function__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getReturnKeyword_5_0()); }
	'return'
	{ after(grammarAccess.getFunctionAccess().getReturnKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getReturnAssignment_5_1()); }
	(rule__Function__ReturnAssignment_5_1)
	{ after(grammarAccess.getFunctionAccess().getReturnAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RotateCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateCommand__Group__0__Impl
	rule__RotateCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateCommandAccess().getRotateCommandAction_0()); }
	()
	{ after(grammarAccess.getRotateCommandAccess().getRotateCommandAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateCommand__Group__1__Impl
	rule__RotateCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateCommandAccess().getRotateCommandKeyword_1()); }
	'RotateCommand'
	{ after(grammarAccess.getRotateCommandAccess().getRotateCommandKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateCommand__Group__2__Impl
	rule__RotateCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateCommandAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRotateCommandAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateCommand__Group__3__Impl
	rule__RotateCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateCommandAccess().getGroup_3()); }
	(rule__RotateCommand__Group_3__0)?
	{ after(grammarAccess.getRotateCommandAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateCommand__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateCommandAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getRotateCommandAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RotateCommand__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateCommand__Group_3__0__Impl
	rule__RotateCommand__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateCommand__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateCommandAccess().getAngleKeyword_3_0()); }
	'angle'
	{ after(grammarAccess.getRotateCommandAccess().getAngleKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateCommand__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateCommand__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateCommand__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateCommandAccess().getAngleAssignment_3_1()); }
	(rule__RotateCommand__AngleAssignment_3_1)
	{ after(grammarAccess.getRotateCommandAccess().getAngleAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectionCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectionCommand__Group__0__Impl
	rule__DirectionCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectionCommandAccess().getDirectionCommandKeyword_0()); }
	'DirectionCommand'
	{ after(grammarAccess.getDirectionCommandAccess().getDirectionCommandKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectionCommand__Group__1__Impl
	rule__DirectionCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectionCommandAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDirectionCommandAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectionCommand__Group__2__Impl
	rule__DirectionCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectionCommandAccess().getDistanceKeyword_2()); }
	'distance'
	{ after(grammarAccess.getDirectionCommandAccess().getDistanceKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectionCommand__Group__3__Impl
	rule__DirectionCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectionCommandAccess().getDistanceAssignment_3()); }
	(rule__DirectionCommand__DistanceAssignment_3)
	{ after(grammarAccess.getDirectionCommandAccess().getDistanceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectionCommand__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectionCommandAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getDirectionCommandAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpeedCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpeedCommand__Group__0__Impl
	rule__SpeedCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpeedCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpeedCommandAccess().getSpeedCommandAction_0()); }
	()
	{ after(grammarAccess.getSpeedCommandAccess().getSpeedCommandAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpeedCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpeedCommand__Group__1__Impl
	rule__SpeedCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpeedCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpeedCommandAccess().getSpeedCommandKeyword_1()); }
	'SpeedCommand'
	{ after(grammarAccess.getSpeedCommandAccess().getSpeedCommandKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpeedCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpeedCommand__Group__2__Impl
	rule__SpeedCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SpeedCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpeedCommandAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSpeedCommandAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpeedCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpeedCommand__Group__3__Impl
	rule__SpeedCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SpeedCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpeedCommandAccess().getGroup_3()); }
	(rule__SpeedCommand__Group_3__0)?
	{ after(grammarAccess.getSpeedCommandAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpeedCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpeedCommand__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpeedCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpeedCommandAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSpeedCommandAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpeedCommand__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpeedCommand__Group_3__0__Impl
	rule__SpeedCommand__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpeedCommand__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpeedCommandAccess().getSpeedKeyword_3_0()); }
	'speed'
	{ after(grammarAccess.getSpeedCommandAccess().getSpeedKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpeedCommand__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpeedCommand__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpeedCommand__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpeedCommandAccess().getSpeedAssignment_3_1()); }
	(rule__SpeedCommand__SpeedAssignment_3_1)
	{ after(grammarAccess.getSpeedCommandAccess().getSpeedAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DistanceSensorCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DistanceSensorCommand__Group__0__Impl
	rule__DistanceSensorCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceSensorCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceSensorCommandAccess().getDistanceSensorCommandAction_0()); }
	()
	{ after(grammarAccess.getDistanceSensorCommandAccess().getDistanceSensorCommandAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceSensorCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DistanceSensorCommand__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceSensorCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceSensorCommandAccess().getDistanceSensorCommandKeyword_1()); }
	'DistanceSensorCommand'
	{ after(grammarAccess.getDistanceSensorCommandAccess().getDistanceSensorCommandKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSensorCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSensorCommand__Group__0__Impl
	rule__TimeSensorCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSensorCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSensorCommandAccess().getTimeSensorCommandAction_0()); }
	()
	{ after(grammarAccess.getTimeSensorCommandAccess().getTimeSensorCommandAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSensorCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSensorCommand__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSensorCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSensorCommandAccess().getTimeSensorCommandKeyword_1()); }
	'TimeSensorCommand'
	{ after(grammarAccess.getTimeSensorCommandAccess().getTimeSensorCommandKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExp_Impl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExp_Impl__Group__0__Impl
	rule__BooleanExp_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp_Impl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExp_ImplAccess().getBooleanExpAction_0()); }
	()
	{ after(grammarAccess.getBooleanExp_ImplAccess().getBooleanExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp_Impl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExp_Impl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp_Impl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExp_ImplAccess().getBooleanExpKeyword_1()); }
	'BooleanExp'
	{ after(grammarAccess.getBooleanExp_ImplAccess().getBooleanExpKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group__0__Impl
	rule__PlusMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getPlusMinusAction_0()); }
	()
	{ after(grammarAccess.getPlusMinusAccess().getPlusMinusAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getPlusMinusKeyword_1()); }
	'PlusMinus'
	{ after(grammarAccess.getPlusMinusAccess().getPlusMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group__0__Impl
	rule__MultDiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getMultDivAction_0()); }
	()
	{ after(grammarAccess.getMultDivAccess().getMultDivAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getMultDivKeyword_1()); }
	'MultDiv'
	{ after(grammarAccess.getMultDivAccess().getMultDivKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprAri__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprAri__Group__0__Impl
	rule__PrimaryExprAri__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAriAccess().getPrimaryExprAriAction_0()); }
	()
	{ after(grammarAccess.getPrimaryExprAriAccess().getPrimaryExprAriAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprAri__Group__1__Impl
	rule__PrimaryExprAri__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAriAccess().getPrimaryExprAriKeyword_1()); }
	'PrimaryExprAri'
	{ after(grammarAccess.getPrimaryExprAriAccess().getPrimaryExprAriKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprAri__Group__2__Impl
	rule__PrimaryExprAri__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAriAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPrimaryExprAriAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprAri__Group__3__Impl
	rule__PrimaryExprAri__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAriAccess().getGroup_3()); }
	(rule__PrimaryExprAri__Group_3__0)?
	{ after(grammarAccess.getPrimaryExprAriAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprAri__Group__4__Impl
	rule__PrimaryExprAri__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAriAccess().getGroup_4()); }
	(rule__PrimaryExprAri__Group_4__0)?
	{ after(grammarAccess.getPrimaryExprAriAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprAri__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAriAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getPrimaryExprAriAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprAri__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprAri__Group_3__0__Impl
	rule__PrimaryExprAri__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAriAccess().getTypeKeyword_3_0()); }
	'type'
	{ after(grammarAccess.getPrimaryExprAriAccess().getTypeKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprAri__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAriAccess().getTypeAssignment_3_1()); }
	(rule__PrimaryExprAri__TypeAssignment_3_1)
	{ after(grammarAccess.getPrimaryExprAriAccess().getTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprAri__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprAri__Group_4__0__Impl
	rule__PrimaryExprAri__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAriAccess().getCallKeyword_4_0()); }
	'call'
	{ after(grammarAccess.getPrimaryExprAriAccess().getCallKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprAri__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAriAccess().getCallAssignment_4_1()); }
	(rule__PrimaryExprAri__CallAssignment_4_1)
	{ after(grammarAccess.getPrimaryExprAriAccess().getCallAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclarationVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationVariable__Group__0__Impl
	rule__DeclarationVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationVariableAccess().getDeclarationVariableKeyword_0()); }
	'DeclarationVariable'
	{ after(grammarAccess.getDeclarationVariableAccess().getDeclarationVariableKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationVariable__Group__1__Impl
	rule__DeclarationVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationVariableAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDeclarationVariableAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationVariable__Group__2__Impl
	rule__DeclarationVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationVariableAccess().getGroup_2()); }
	(rule__DeclarationVariable__Group_2__0)?
	{ after(grammarAccess.getDeclarationVariableAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationVariable__Group__3__Impl
	rule__DeclarationVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationVariableAccess().getGroup_3()); }
	(rule__DeclarationVariable__Group_3__0)?
	{ after(grammarAccess.getDeclarationVariableAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationVariable__Group__4__Impl
	rule__DeclarationVariable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationVariableAccess().getTypeKeyword_4()); }
	'type'
	{ after(grammarAccess.getDeclarationVariableAccess().getTypeKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationVariable__Group__5__Impl
	rule__DeclarationVariable__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationVariableAccess().getTypeAssignment_5()); }
	(rule__DeclarationVariable__TypeAssignment_5)
	{ after(grammarAccess.getDeclarationVariableAccess().getTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationVariable__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationVariableAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getDeclarationVariableAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclarationVariable__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationVariable__Group_2__0__Impl
	rule__DeclarationVariable__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationVariableAccess().getNomKeyword_2_0()); }
	'nom'
	{ after(grammarAccess.getDeclarationVariableAccess().getNomKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationVariable__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationVariableAccess().getNomAssignment_2_1()); }
	(rule__DeclarationVariable__NomAssignment_2_1)
	{ after(grammarAccess.getDeclarationVariableAccess().getNomAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclarationVariable__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationVariable__Group_3__0__Impl
	rule__DeclarationVariable__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationVariableAccess().getExpressionbaseKeyword_3_0()); }
	'expressionbase'
	{ after(grammarAccess.getDeclarationVariableAccess().getExpressionbaseKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationVariable__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationVariableAccess().getExpressionbaseAssignment_3_1()); }
	(rule__DeclarationVariable__ExpressionbaseAssignment_3_1)
	{ after(grammarAccess.getDeclarationVariableAccess().getExpressionbaseAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LOOP__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LOOP__Group__0__Impl
	rule__LOOP__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLOOPAccess().getLOOPKeyword_0()); }
	'LOOP'
	{ after(grammarAccess.getLOOPAccess().getLOOPKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LOOP__Group__1__Impl
	rule__LOOP__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLOOPAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getLOOPAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LOOP__Group__2__Impl
	rule__LOOP__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLOOPAccess().getGroup_2()); }
	(rule__LOOP__Group_2__0)?
	{ after(grammarAccess.getLOOPAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LOOP__Group__3__Impl
	rule__LOOP__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLOOPAccess().getExpressionKeyword_3()); }
	'expression'
	{ after(grammarAccess.getLOOPAccess().getExpressionKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LOOP__Group__4__Impl
	rule__LOOP__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLOOPAccess().getExpressionAssignment_4()); }
	(rule__LOOP__ExpressionAssignment_4)
	{ after(grammarAccess.getLOOPAccess().getExpressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LOOP__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLOOPAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getLOOPAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LOOP__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LOOP__Group_2__0__Impl
	rule__LOOP__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLOOPAccess().getInstructionKeyword_2_0()); }
	'instruction'
	{ after(grammarAccess.getLOOPAccess().getInstructionKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LOOP__Group_2__1__Impl
	rule__LOOP__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLOOPAccess().getLeftCurlyBracketKeyword_2_1()); }
	'{'
	{ after(grammarAccess.getLOOPAccess().getLeftCurlyBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LOOP__Group_2__2__Impl
	rule__LOOP__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLOOPAccess().getInstructionAssignment_2_2()); }
	(rule__LOOP__InstructionAssignment_2_2)
	{ after(grammarAccess.getLOOPAccess().getInstructionAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LOOP__Group_2__3__Impl
	rule__LOOP__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLOOPAccess().getGroup_2_3()); }
	(rule__LOOP__Group_2_3__0)*
	{ after(grammarAccess.getLOOPAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LOOP__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLOOPAccess().getRightCurlyBracketKeyword_2_4()); }
	'}'
	{ after(grammarAccess.getLOOPAccess().getRightCurlyBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LOOP__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LOOP__Group_2_3__0__Impl
	rule__LOOP__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLOOPAccess().getCommaKeyword_2_3_0()); }
	','
	{ after(grammarAccess.getLOOPAccess().getCommaKeyword_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LOOP__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLOOPAccess().getInstructionAssignment_2_3_1()); }
	(rule__LOOP__InstructionAssignment_2_3_1)
	{ after(grammarAccess.getLOOPAccess().getInstructionAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IF__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF__Group__0__Impl
	rule__IF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIFAccess().getIFKeyword_0()); }
	'IF'
	{ after(grammarAccess.getIFAccess().getIFKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF__Group__1__Impl
	rule__IF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIFAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getIFAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF__Group__2__Impl
	rule__IF__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIFAccess().getGroup_2()); }
	(rule__IF__Group_2__0)?
	{ after(grammarAccess.getIFAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF__Group__3__Impl
	rule__IF__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIFAccess().getExpressionKeyword_3()); }
	'expression'
	{ after(grammarAccess.getIFAccess().getExpressionKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF__Group__4__Impl
	rule__IF__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIFAccess().getExpressionAssignment_4()); }
	(rule__IF__ExpressionAssignment_4)
	{ after(grammarAccess.getIFAccess().getExpressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIFAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getIFAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IF__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF__Group_2__0__Impl
	rule__IF__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIFAccess().getInstructionKeyword_2_0()); }
	'instruction'
	{ after(grammarAccess.getIFAccess().getInstructionKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF__Group_2__1__Impl
	rule__IF__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIFAccess().getLeftCurlyBracketKeyword_2_1()); }
	'{'
	{ after(grammarAccess.getIFAccess().getLeftCurlyBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF__Group_2__2__Impl
	rule__IF__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIFAccess().getInstructionAssignment_2_2()); }
	(rule__IF__InstructionAssignment_2_2)
	{ after(grammarAccess.getIFAccess().getInstructionAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF__Group_2__3__Impl
	rule__IF__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIFAccess().getGroup_2_3()); }
	(rule__IF__Group_2_3__0)*
	{ after(grammarAccess.getIFAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIFAccess().getRightCurlyBracketKeyword_2_4()); }
	'}'
	{ after(grammarAccess.getIFAccess().getRightCurlyBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IF__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF__Group_2_3__0__Impl
	rule__IF__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIFAccess().getCommaKeyword_2_3_0()); }
	','
	{ after(grammarAccess.getIFAccess().getCommaKeyword_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIFAccess().getInstructionAssignment_2_3_1()); }
	(rule__IF__InstructionAssignment_2_3_1)
	{ after(grammarAccess.getIFAccess().getInstructionAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallVariable__Group__0__Impl
	rule__CallVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallVariableAccess().getCallVariableAction_0()); }
	()
	{ after(grammarAccess.getCallVariableAccess().getCallVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallVariableAccess().getCallVariableKeyword_1()); }
	'CallVariable'
	{ after(grammarAccess.getCallVariableAccess().getCallVariableKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallFunction__Group__0__Impl
	rule__CallFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallFunctionAccess().getCallFunctionAction_0()); }
	()
	{ after(grammarAccess.getCallFunctionAccess().getCallFunctionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallFunction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallFunctionAccess().getCallFunctionKeyword_1()); }
	'CallFunction'
	{ after(grammarAccess.getCallFunctionAccess().getCallFunctionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Affectation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__0__Impl
	rule__Affectation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getAffectationKeyword_0()); }
	'Affectation'
	{ after(grammarAccess.getAffectationAccess().getAffectationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__1__Impl
	rule__Affectation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getAffectationAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__2__Impl
	rule__Affectation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getExpressionbaseKeyword_2()); }
	'expressionbase'
	{ after(grammarAccess.getAffectationAccess().getExpressionbaseKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__3__Impl
	rule__Affectation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getAffectationAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__4__Impl
	rule__Affectation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getExpressionbaseAssignment_4()); }
	(rule__Affectation__ExpressionbaseAssignment_4)
	{ after(grammarAccess.getAffectationAccess().getExpressionbaseAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__5__Impl
	rule__Affectation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getGroup_5()); }
	(rule__Affectation__Group_5__0)*
	{ after(grammarAccess.getAffectationAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__6__Impl
	rule__Affectation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getAffectationAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__7__Impl
	rule__Affectation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getGroup_7()); }
	(rule__Affectation__Group_7__0)?
	{ after(grammarAccess.getAffectationAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getAffectationAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Affectation__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group_5__0__Impl
	rule__Affectation__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getAffectationAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getExpressionbaseAssignment_5_1()); }
	(rule__Affectation__ExpressionbaseAssignment_5_1)
	{ after(grammarAccess.getAffectationAccess().getExpressionbaseAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Affectation__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group_7__0__Impl
	rule__Affectation__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getCallvariableKeyword_7_0()); }
	'callvariable'
	{ after(grammarAccess.getAffectationAccess().getCallvariableKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getCallvariableAssignment_7_1()); }
	(rule__Affectation__CallvariableAssignment_7_1)
	{ after(grammarAccess.getAffectationAccess().getCallvariableAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprBool__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprBool__Group__0__Impl
	rule__PrimaryExprBool__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprBoolAccess().getPrimaryExprBoolAction_0()); }
	()
	{ after(grammarAccess.getPrimaryExprBoolAccess().getPrimaryExprBoolAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprBool__Group__1__Impl
	rule__PrimaryExprBool__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprBoolAccess().getPrimaryExprBoolKeyword_1()); }
	'PrimaryExprBool'
	{ after(grammarAccess.getPrimaryExprBoolAccess().getPrimaryExprBoolKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprBool__Group__2__Impl
	rule__PrimaryExprBool__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprBoolAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPrimaryExprBoolAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprBool__Group__3__Impl
	rule__PrimaryExprBool__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprBoolAccess().getGroup_3()); }
	(rule__PrimaryExprBool__Group_3__0)?
	{ after(grammarAccess.getPrimaryExprBoolAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprBool__Group__4__Impl
	rule__PrimaryExprBool__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprBoolAccess().getGroup_4()); }
	(rule__PrimaryExprBool__Group_4__0)?
	{ after(grammarAccess.getPrimaryExprBoolAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprBool__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprBoolAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getPrimaryExprBoolAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprBool__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprBool__Group_3__0__Impl
	rule__PrimaryExprBool__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprBoolAccess().getTypeKeyword_3_0()); }
	'type'
	{ after(grammarAccess.getPrimaryExprBoolAccess().getTypeKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprBool__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprBoolAccess().getTypeAssignment_3_1()); }
	(rule__PrimaryExprBool__TypeAssignment_3_1)
	{ after(grammarAccess.getPrimaryExprBoolAccess().getTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprBool__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprBool__Group_4__0__Impl
	rule__PrimaryExprBool__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprBoolAccess().getCallKeyword_4_0()); }
	'call'
	{ after(grammarAccess.getPrimaryExprBoolAccess().getCallKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprBool__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprBoolAccess().getCallAssignment_4_1()); }
	(rule__PrimaryExprBool__CallAssignment_4_1)
	{ after(grammarAccess.getPrimaryExprBoolAccess().getCallAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndAction_0()); }
	()
	{ after(grammarAccess.getAndAccess().getAndAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndKeyword_1()); }
	'And'
	{ after(grammarAccess.getAndAccess().getAndKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrAction_0()); }
	()
	{ after(grammarAccess.getOrAccess().getOrAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrKeyword_1()); }
	'Or'
	{ after(grammarAccess.getOrAccess().getOrKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Not__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not__Group__0__Impl
	rule__Not__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotAccess().getNotAction_0()); }
	()
	{ after(grammarAccess.getNotAccess().getNotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotAccess().getNotKeyword_1()); }
	'Not'
	{ after(grammarAccess.getNotAccess().getNotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equals__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equals__Group__0__Impl
	rule__Equals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualsAccess().getEqualsAction_0()); }
	()
	{ after(grammarAccess.getEqualsAccess().getEqualsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equals__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualsAccess().getEqualsKeyword_1()); }
	'Equals'
	{ after(grammarAccess.getEqualsAccess().getEqualsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusMinusDistance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinusDistance__Group__0__Impl
	rule__PlusMinusDistance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusDistance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusDistanceAccess().getPlusMinusDistanceAction_0()); }
	()
	{ after(grammarAccess.getPlusMinusDistanceAccess().getPlusMinusDistanceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusDistance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinusDistance__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusDistance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusDistanceAccess().getPlusMinusDistanceKeyword_1()); }
	'PlusMinusDistance'
	{ after(grammarAccess.getPlusMinusDistanceAccess().getPlusMinusDistanceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDivDistance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDivDistance__Group__0__Impl
	rule__MultDivDistance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDivDistance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivDistanceAccess().getMultDivDistanceAction_0()); }
	()
	{ after(grammarAccess.getMultDivDistanceAccess().getMultDivDistanceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDivDistance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDivDistance__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDivDistance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivDistanceAccess().getMultDivDistanceKeyword_1()); }
	'MultDivDistance'
	{ after(grammarAccess.getMultDivDistanceAccess().getMultDivDistanceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprDistance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprDistance__Group__0__Impl
	rule__PrimaryExprDistance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprDistance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprDistanceAccess().getPrimaryExprDistanceAction_0()); }
	()
	{ after(grammarAccess.getPrimaryExprDistanceAccess().getPrimaryExprDistanceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprDistance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprDistance__Group__1__Impl
	rule__PrimaryExprDistance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprDistance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprDistanceAccess().getPrimaryExprDistanceKeyword_1()); }
	'PrimaryExprDistance'
	{ after(grammarAccess.getPrimaryExprDistanceAccess().getPrimaryExprDistanceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprDistance__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprDistance__Group__2__Impl
	rule__PrimaryExprDistance__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprDistance__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprDistanceAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPrimaryExprDistanceAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprDistance__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprDistance__Group__3__Impl
	rule__PrimaryExprDistance__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprDistance__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprDistanceAccess().getGroup_3()); }
	(rule__PrimaryExprDistance__Group_3__0)?
	{ after(grammarAccess.getPrimaryExprDistanceAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprDistance__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprDistance__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprDistance__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprDistanceAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPrimaryExprDistanceAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprDistance__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprDistance__Group_3__0__Impl
	rule__PrimaryExprDistance__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprDistance__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprDistanceAccess().getDistanceKeyword_3_0()); }
	'distance'
	{ after(grammarAccess.getPrimaryExprDistanceAccess().getDistanceKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprDistance__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprDistance__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprDistance__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprDistanceAccess().getDistanceAssignment_3_1()); }
	(rule__PrimaryExprDistance__DistanceAssignment_3_1)
	{ after(grammarAccess.getPrimaryExprDistanceAccess().getDistanceAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusMinusTime__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinusTime__Group__0__Impl
	rule__PlusMinusTime__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusTime__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusTimeAccess().getPlusMinusTimeAction_0()); }
	()
	{ after(grammarAccess.getPlusMinusTimeAccess().getPlusMinusTimeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusTime__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinusTime__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusTime__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusTimeAccess().getPlusMinusTimeKeyword_1()); }
	'PlusMinusTime'
	{ after(grammarAccess.getPlusMinusTimeAccess().getPlusMinusTimeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDiveTime__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiveTime__Group__0__Impl
	rule__MultDiveTime__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiveTime__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDiveTimeAccess().getMultDiveTimeAction_0()); }
	()
	{ after(grammarAccess.getMultDiveTimeAccess().getMultDiveTimeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiveTime__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiveTime__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiveTime__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDiveTimeAccess().getMultDiveTimeKeyword_1()); }
	'MultDiveTime'
	{ after(grammarAccess.getMultDiveTimeAccess().getMultDiveTimeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprTime__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprTime__Group__0__Impl
	rule__PrimaryExprTime__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTime__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprTimeAccess().getPrimaryExprTimeAction_0()); }
	()
	{ after(grammarAccess.getPrimaryExprTimeAccess().getPrimaryExprTimeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTime__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprTime__Group__1__Impl
	rule__PrimaryExprTime__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTime__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprTimeAccess().getPrimaryExprTimeKeyword_1()); }
	'PrimaryExprTime'
	{ after(grammarAccess.getPrimaryExprTimeAccess().getPrimaryExprTimeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTime__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprTime__Group__2__Impl
	rule__PrimaryExprTime__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTime__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprTimeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPrimaryExprTimeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTime__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprTime__Group__3__Impl
	rule__PrimaryExprTime__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTime__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprTimeAccess().getGroup_3()); }
	(rule__PrimaryExprTime__Group_3__0)?
	{ after(grammarAccess.getPrimaryExprTimeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTime__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprTime__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTime__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprTimeAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPrimaryExprTimeAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprTime__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprTime__Group_3__0__Impl
	rule__PrimaryExprTime__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTime__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprTimeAccess().getTimeKeyword_3_0()); }
	'time'
	{ after(grammarAccess.getPrimaryExprTimeAccess().getTimeKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTime__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprTime__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTime__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprTimeAccess().getTimeAssignment_3_1()); }
	(rule__PrimaryExprTime__TimeAssignment_3_1)
	{ after(grammarAccess.getPrimaryExprTimeAccess().getTimeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparaisonDistance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparaisonDistance__Group__0__Impl
	rule__ComparaisonDistance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonDistance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparaisonDistanceAccess().getComparaisonDistanceAction_0()); }
	()
	{ after(grammarAccess.getComparaisonDistanceAccess().getComparaisonDistanceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonDistance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparaisonDistance__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonDistance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparaisonDistanceAccess().getComparaisonDistanceKeyword_1()); }
	'ComparaisonDistance'
	{ after(grammarAccess.getComparaisonDistanceAccess().getComparaisonDistanceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparaisonTime__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparaisonTime__Group__0__Impl
	rule__ComparaisonTime__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonTime__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparaisonTimeAccess().getComparaisonTimeAction_0()); }
	()
	{ after(grammarAccess.getComparaisonTimeAccess().getComparaisonTimeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonTime__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparaisonTime__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonTime__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparaisonTimeAccess().getComparaisonTimeKeyword_1()); }
	'ComparaisonTime'
	{ after(grammarAccess.getComparaisonTimeAccess().getComparaisonTimeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparaisonAri__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparaisonAri__Group__0__Impl
	rule__ComparaisonAri__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonAri__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparaisonAriAccess().getComparaisonAriAction_0()); }
	()
	{ after(grammarAccess.getComparaisonAriAccess().getComparaisonAriAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonAri__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparaisonAri__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonAri__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparaisonAriAccess().getComparaisonAriKeyword_1()); }
	'ComparaisonAri'
	{ after(grammarAccess.getComparaisonAriAccess().getComparaisonAriKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__0__Impl
	rule__EDouble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__1__Impl
	rule__EDouble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); }
	(RULE_INT)?
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__2__Impl
	rule__EDouble__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getEDoubleAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__3__Impl
	rule__EDouble__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getGroup_4()); }
	(rule__EDouble__Group_4__0)?
	{ after(grammarAccess.getEDoubleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_4__0__Impl
	rule__EDouble__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getAlternatives_4_0()); }
	(rule__EDouble__Alternatives_4_0)
	{ after(grammarAccess.getEDoubleAccess().getAlternatives_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_4__1__Impl
	rule__EDouble__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1()); }
	('-')?
	{ after(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2()); }
	RULE_INT
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CM__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CM__Group__0__Impl
	rule__CM__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CM__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCMAccess().getCMAction_0()); }
	()
	{ after(grammarAccess.getCMAccess().getCMAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CM__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CM__Group__1__Impl
	rule__CM__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CM__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCMAccess().getCMKeyword_1()); }
	'CM'
	{ after(grammarAccess.getCMAccess().getCMKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CM__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CM__Group__2__Impl
	rule__CM__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CM__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCMAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getCMAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CM__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CM__Group__3__Impl
	rule__CM__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CM__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCMAccess().getGroup_3()); }
	(rule__CM__Group_3__0)?
	{ after(grammarAccess.getCMAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CM__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CM__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CM__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCMAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getCMAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CM__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CM__Group_3__0__Impl
	rule__CM__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CM__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCMAccess().getDistanceKeyword_3_0()); }
	'distance'
	{ after(grammarAccess.getCMAccess().getDistanceKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CM__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CM__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CM__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCMAccess().getDistanceAssignment_3_1()); }
	(rule__CM__DistanceAssignment_3_1)
	{ after(grammarAccess.getCMAccess().getDistanceAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mm__Group__0__Impl
	rule__Mm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMmAccess().getMmAction_0()); }
	()
	{ after(grammarAccess.getMmAccess().getMmAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mm__Group__1__Impl
	rule__Mm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMmAccess().getMmKeyword_1()); }
	'mm'
	{ after(grammarAccess.getMmAccess().getMmKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mm__Group__2__Impl
	rule__Mm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMmAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getMmAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mm__Group__3__Impl
	rule__Mm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMmAccess().getGroup_3()); }
	(rule__Mm__Group_3__0)?
	{ after(grammarAccess.getMmAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mm__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMmAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getMmAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mm__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mm__Group_3__0__Impl
	rule__Mm__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mm__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMmAccess().getDistanceKeyword_3_0()); }
	'distance'
	{ after(grammarAccess.getMmAccess().getDistanceKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mm__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mm__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mm__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMmAccess().getDistanceAssignment_3_1()); }
	(rule__Mm__DistanceAssignment_3_1)
	{ after(grammarAccess.getMmAccess().getDistanceAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Time__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__0__Impl
	rule__Time__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getTimeAction_0()); }
	()
	{ after(grammarAccess.getTimeAccess().getTimeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__1__Impl
	rule__Time__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getTimeKeyword_1()); }
	'Time'
	{ after(grammarAccess.getTimeAccess().getTimeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__2__Impl
	rule__Time__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTimeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__3__Impl
	rule__Time__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getGroup_3()); }
	(rule__Time__Group_3__0)?
	{ after(grammarAccess.getTimeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTimeAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Time__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group_3__0__Impl
	rule__Time__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getValueKeyword_3_0()); }
	'value'
	{ after(grammarAccess.getTimeAccess().getValueKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getValueAssignment_3_1()); }
	(rule__Time__ValueAssignment_3_1)
	{ after(grammarAccess.getTimeAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanType__Group__0__Impl
	rule__BooleanType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTypeAccess().getBooleanTypeAction_0()); }
	()
	{ after(grammarAccess.getBooleanTypeAccess().getBooleanTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanType__Group__1__Impl
	rule__BooleanType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTypeAccess().getValueAssignment_1()); }
	(rule__BooleanType__ValueAssignment_1)?
	{ after(grammarAccess.getBooleanTypeAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTypeAccess().getBooleanTypeKeyword_2()); }
	'BooleanType'
	{ after(grammarAccess.getBooleanTypeAccess().getBooleanTypeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumberType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberType__Group__0__Impl
	rule__NumberType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberTypeAccess().getNumberTypeAction_0()); }
	()
	{ after(grammarAccess.getNumberTypeAccess().getNumberTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberType__Group__1__Impl
	rule__NumberType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberTypeAccess().getNumberTypeKeyword_1()); }
	'NumberType'
	{ after(grammarAccess.getNumberTypeAccess().getNumberTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberType__Group__2__Impl
	rule__NumberType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberTypeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getNumberTypeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberType__Group__3__Impl
	rule__NumberType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberTypeAccess().getGroup_3()); }
	(rule__NumberType__Group_3__0)?
	{ after(grammarAccess.getNumberTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberTypeAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getNumberTypeAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumberType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberType__Group_3__0__Impl
	rule__NumberType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberTypeAccess().getValueKeyword_3_0()); }
	'value'
	{ after(grammarAccess.getNumberTypeAccess().getValueKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberTypeAccess().getValueAssignment_3_1()); }
	(rule__NumberType__ValueAssignment_3_1)
	{ after(grammarAccess.getNumberTypeAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__FunctionAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getFunctionFunctionParserRuleCall_3_2_0()); }
		ruleFunction
		{ after(grammarAccess.getRobotAccess().getFunctionFunctionParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__FunctionAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getFunctionFunctionParserRuleCall_3_3_1_0()); }
		ruleFunction
		{ after(grammarAccess.getRobotAccess().getFunctionFunctionParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__InstructionAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getInstructionInstructionParserRuleCall_3_2_0()); }
		ruleInstruction
		{ after(grammarAccess.getFunctionAccess().getInstructionInstructionParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__InstructionAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getInstructionInstructionParserRuleCall_3_3_1_0()); }
		ruleInstruction
		{ after(grammarAccess.getFunctionAccess().getInstructionInstructionParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ParametersAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getParametersTypeClassParserRuleCall_4_2_0()); }
		ruleTypeClass
		{ after(grammarAccess.getFunctionAccess().getParametersTypeClassParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ParametersAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getParametersTypeClassParserRuleCall_4_3_1_0()); }
		ruleTypeClass
		{ after(grammarAccess.getFunctionAccess().getParametersTypeClassParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ReturnAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getReturnTypeClassParserRuleCall_5_1_0()); }
		ruleTypeClass
		{ after(grammarAccess.getFunctionAccess().getReturnTypeClassParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateCommand__AngleAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateCommandAccess().getAngleEDoubleParserRuleCall_3_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getRotateCommandAccess().getAngleEDoubleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionCommand__DistanceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionCommandAccess().getDistanceDistanceParserRuleCall_3_0()); }
		ruleDistance
		{ after(grammarAccess.getDirectionCommandAccess().getDistanceDistanceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpeedCommand__SpeedAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpeedCommandAccess().getSpeedEDoubleParserRuleCall_3_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getSpeedCommandAccess().getSpeedEDoubleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__TypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAriAccess().getTypeTypeClassParserRuleCall_3_1_0()); }
		ruleTypeClass
		{ after(grammarAccess.getPrimaryExprAriAccess().getTypeTypeClassParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprAri__CallAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAriAccess().getCallCallParserRuleCall_4_1_0()); }
		ruleCall
		{ after(grammarAccess.getPrimaryExprAriAccess().getCallCallParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__NomAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationVariableAccess().getNomEStringParserRuleCall_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getDeclarationVariableAccess().getNomEStringParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__ExpressionbaseAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationVariableAccess().getExpressionbaseExpressionBaseParserRuleCall_3_1_0()); }
		ruleExpressionBase
		{ after(grammarAccess.getDeclarationVariableAccess().getExpressionbaseExpressionBaseParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationVariable__TypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationVariableAccess().getTypeTypeClassParserRuleCall_5_0()); }
		ruleTypeClass
		{ after(grammarAccess.getDeclarationVariableAccess().getTypeTypeClassParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__InstructionAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLOOPAccess().getInstructionInstructionParserRuleCall_2_2_0()); }
		ruleInstruction
		{ after(grammarAccess.getLOOPAccess().getInstructionInstructionParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__InstructionAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLOOPAccess().getInstructionInstructionParserRuleCall_2_3_1_0()); }
		ruleInstruction
		{ after(grammarAccess.getLOOPAccess().getInstructionInstructionParserRuleCall_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP__ExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLOOPAccess().getExpressionExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getLOOPAccess().getExpressionExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__InstructionAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIFAccess().getInstructionInstructionParserRuleCall_2_2_0()); }
		ruleInstruction
		{ after(grammarAccess.getIFAccess().getInstructionInstructionParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__InstructionAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIFAccess().getInstructionInstructionParserRuleCall_2_3_1_0()); }
		ruleInstruction
		{ after(grammarAccess.getIFAccess().getInstructionInstructionParserRuleCall_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF__ExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIFAccess().getExpressionExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getIFAccess().getExpressionExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__ExpressionbaseAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectationAccess().getExpressionbaseExpressionBaseParserRuleCall_4_0()); }
		ruleExpressionBase
		{ after(grammarAccess.getAffectationAccess().getExpressionbaseExpressionBaseParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__ExpressionbaseAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectationAccess().getExpressionbaseExpressionBaseParserRuleCall_5_1_0()); }
		ruleExpressionBase
		{ after(grammarAccess.getAffectationAccess().getExpressionbaseExpressionBaseParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__CallvariableAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectationAccess().getCallvariableCallVariableParserRuleCall_7_1_0()); }
		ruleCallVariable
		{ after(grammarAccess.getAffectationAccess().getCallvariableCallVariableParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__TypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprBoolAccess().getTypeTypeClassParserRuleCall_3_1_0()); }
		ruleTypeClass
		{ after(grammarAccess.getPrimaryExprBoolAccess().getTypeTypeClassParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprBool__CallAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprBoolAccess().getCallCallParserRuleCall_4_1_0()); }
		ruleCall
		{ after(grammarAccess.getPrimaryExprBoolAccess().getCallCallParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprDistance__DistanceAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprDistanceAccess().getDistanceDistanceParserRuleCall_3_1_0()); }
		ruleDistance
		{ after(grammarAccess.getPrimaryExprDistanceAccess().getDistanceDistanceParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTime__TimeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprTimeAccess().getTimeTimeParserRuleCall_3_1_0()); }
		ruleTime
		{ after(grammarAccess.getPrimaryExprTimeAccess().getTimeTimeParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CM__DistanceAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCMAccess().getDistanceEDoubleParserRuleCall_3_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getCMAccess().getDistanceEDoubleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mm__DistanceAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMmAccess().getDistanceEDoubleParserRuleCall_3_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getMmAccess().getDistanceEDoubleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeAccess().getValueEDoubleParserRuleCall_3_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getTimeAccess().getValueEDoubleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanTypeAccess().getValueValueKeyword_1_0()); }
		(
			{ before(grammarAccess.getBooleanTypeAccess().getValueValueKeyword_1_0()); }
			'value'
			{ after(grammarAccess.getBooleanTypeAccess().getValueValueKeyword_1_0()); }
		)
		{ after(grammarAccess.getBooleanTypeAccess().getValueValueKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberType__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberTypeAccess().getValueEDoubleParserRuleCall_3_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getNumberTypeAccess().getValueEDoubleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
