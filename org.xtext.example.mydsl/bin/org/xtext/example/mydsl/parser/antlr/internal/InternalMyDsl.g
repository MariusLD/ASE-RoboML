/*
 * generated by Xtext 2.32.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Affectation";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleAffectation
entryRuleAffectation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAffectationRule()); }
	iv_ruleAffectation=ruleAffectation
	{ $current=$iv_ruleAffectation.current; }
	EOF;

// Rule Affectation
ruleAffectation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Affectation'
		{
			newLeafNode(otherlv_0, grammarAccess.getAffectationAccess().getAffectationKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAffectationAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='expressionbase'
		{
			newLeafNode(otherlv_2, grammarAccess.getAffectationAccess().getExpressionbaseKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getAffectationAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAffectationAccess().getExpressionbaseExpressionBaseParserRuleCall_4_0());
				}
				lv_expressionbase_4_0=ruleExpressionBase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAffectationRule());
					}
					add(
						$current,
						"expressionbase",
						lv_expressionbase_4_0,
						"org.xtext.example.mydsl.MyDsl.ExpressionBase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getAffectationAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAffectationAccess().getExpressionbaseExpressionBaseParserRuleCall_5_1_0());
					}
					lv_expressionbase_6_0=ruleExpressionBase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAffectationRule());
						}
						add(
							$current,
							"expressionbase",
							lv_expressionbase_6_0,
							"org.xtext.example.mydsl.MyDsl.ExpressionBase");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getAffectationAccess().getRightCurlyBracketKeyword_6());
		}
		(
			otherlv_8='callvariable'
			{
				newLeafNode(otherlv_8, grammarAccess.getAffectationAccess().getCallvariableKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAffectationAccess().getCallvariableCallVariableParserRuleCall_7_1_0());
					}
					lv_callvariable_9_0=ruleCallVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAffectationRule());
						}
						set(
							$current,
							"callvariable",
							lv_callvariable_9_0,
							"org.xtext.example.mydsl.MyDsl.CallVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getAffectationAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleExpressionBase
entryRuleExpressionBase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionBaseRule()); }
	iv_ruleExpressionBase=ruleExpressionBase
	{ $current=$iv_ruleExpressionBase.current; }
	EOF;

// Rule ExpressionBase
ruleExpressionBase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getArithmetiqueExp_ImplParserRuleCall_0());
		}
		this_ArithmetiqueExp_Impl_0=ruleArithmetiqueExp_Impl
		{
			$current = $this_ArithmetiqueExp_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getBooleanExp_ImplParserRuleCall_1());
		}
		this_BooleanExp_Impl_1=ruleBooleanExp_Impl
		{
			$current = $this_BooleanExp_Impl_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getPlusParserRuleCall_2());
		}
		this_Plus_2=rulePlus
		{
			$current = $this_Plus_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getMinusParserRuleCall_3());
		}
		this_Minus_3=ruleMinus
		{
			$current = $this_Minus_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getMultParserRuleCall_4());
		}
		this_Mult_4=ruleMult
		{
			$current = $this_Mult_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getDivParserRuleCall_5());
		}
		this_Div_5=ruleDiv
		{
			$current = $this_Div_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getPrimaryExprAriParserRuleCall_6());
		}
		this_PrimaryExprAri_6=rulePrimaryExprAri
		{
			$current = $this_PrimaryExprAri_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getSecondaryExpAri_ImplParserRuleCall_7());
		}
		this_SecondaryExpAri_Impl_7=ruleSecondaryExpAri_Impl
		{
			$current = $this_SecondaryExpAri_Impl_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getCallVariableParserRuleCall_8());
		}
		this_CallVariable_8=ruleCallVariable
		{
			$current = $this_CallVariable_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getCallFunctionParserRuleCall_9());
		}
		this_CallFunction_9=ruleCallFunction
		{
			$current = $this_CallFunction_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getAffectationParserRuleCall_10());
		}
		this_Affectation_10=ruleAffectation
		{
			$current = $this_Affectation_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getPrimaryExprBoolParserRuleCall_11());
		}
		this_PrimaryExprBool_11=rulePrimaryExprBool
		{
			$current = $this_PrimaryExprBool_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getSecondaryExpBool_ImplParserRuleCall_12());
		}
		this_SecondaryExpBool_Impl_12=ruleSecondaryExpBool_Impl
		{
			$current = $this_SecondaryExpBool_Impl_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getAndParserRuleCall_13());
		}
		this_And_13=ruleAnd
		{
			$current = $this_And_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getOrParserRuleCall_14());
		}
		this_Or_14=ruleOr
		{
			$current = $this_Or_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getNotParserRuleCall_15());
		}
		this_Not_15=ruleNot
		{
			$current = $this_Not_15.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getEqualsParserRuleCall_16());
		}
		this_Equals_16=ruleEquals
		{
			$current = $this_Equals_16.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleArithmetiqueExp
entryRuleArithmetiqueExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmetiqueExpRule()); }
	iv_ruleArithmetiqueExp=ruleArithmetiqueExp
	{ $current=$iv_ruleArithmetiqueExp.current; }
	EOF;

// Rule ArithmetiqueExp
ruleArithmetiqueExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArithmetiqueExpAccess().getArithmetiqueExp_ImplParserRuleCall_0());
		}
		this_ArithmetiqueExp_Impl_0=ruleArithmetiqueExp_Impl
		{
			$current = $this_ArithmetiqueExp_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArithmetiqueExpAccess().getPlusParserRuleCall_1());
		}
		this_Plus_1=rulePlus
		{
			$current = $this_Plus_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArithmetiqueExpAccess().getMinusParserRuleCall_2());
		}
		this_Minus_2=ruleMinus
		{
			$current = $this_Minus_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArithmetiqueExpAccess().getMultParserRuleCall_3());
		}
		this_Mult_3=ruleMult
		{
			$current = $this_Mult_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArithmetiqueExpAccess().getDivParserRuleCall_4());
		}
		this_Div_4=ruleDiv
		{
			$current = $this_Div_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArithmetiqueExpAccess().getPrimaryExprAriParserRuleCall_5());
		}
		this_PrimaryExprAri_5=rulePrimaryExprAri
		{
			$current = $this_PrimaryExprAri_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArithmetiqueExpAccess().getSecondaryExpAri_ImplParserRuleCall_6());
		}
		this_SecondaryExpAri_Impl_6=ruleSecondaryExpAri_Impl
		{
			$current = $this_SecondaryExpAri_Impl_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeClass
entryRuleTypeClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeClassRule()); }
	iv_ruleTypeClass=ruleTypeClass
	{ $current=$iv_ruleTypeClass.current; }
	EOF;

// Rule TypeClass
ruleTypeClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeClassAccess().getCMParserRuleCall_0());
		}
		this_CM_0=ruleCM
		{
			$current = $this_CM_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeClassAccess().getMmParserRuleCall_1());
		}
		this_mm_1=rulemm
		{
			$current = $this_mm_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeClassAccess().getBooleanTypeParserRuleCall_2());
		}
		this_BooleanType_2=ruleBooleanType
		{
			$current = $this_BooleanType_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeClassAccess().getNumberTypeParserRuleCall_3());
		}
		this_NumberType_3=ruleNumberType
		{
			$current = $this_NumberType_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCall
entryRuleCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallRule()); }
	iv_ruleCall=ruleCall
	{ $current=$iv_ruleCall.current; }
	EOF;

// Rule Call
ruleCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCallAccess().getCallVariableParserRuleCall_0());
		}
		this_CallVariable_0=ruleCallVariable
		{
			$current = $this_CallVariable_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCallAccess().getCallFunctionParserRuleCall_1());
		}
		this_CallFunction_1=ruleCallFunction
		{
			$current = $this_CallFunction_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBooleanExp
entryRuleBooleanExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanExpRule()); }
	iv_ruleBooleanExp=ruleBooleanExp
	{ $current=$iv_ruleBooleanExp.current; }
	EOF;

// Rule BooleanExp
ruleBooleanExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBooleanExpAccess().getBooleanExp_ImplParserRuleCall_0());
		}
		this_BooleanExp_Impl_0=ruleBooleanExp_Impl
		{
			$current = $this_BooleanExp_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanExpAccess().getPrimaryExprBoolParserRuleCall_1());
		}
		this_PrimaryExprBool_1=rulePrimaryExprBool
		{
			$current = $this_PrimaryExprBool_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanExpAccess().getSecondaryExpBool_ImplParserRuleCall_2());
		}
		this_SecondaryExpBool_Impl_2=ruleSecondaryExpBool_Impl
		{
			$current = $this_SecondaryExpBool_Impl_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanExpAccess().getAndParserRuleCall_3());
		}
		this_And_3=ruleAnd
		{
			$current = $this_And_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanExpAccess().getOrParserRuleCall_4());
		}
		this_Or_4=ruleOr
		{
			$current = $this_Or_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanExpAccess().getNotParserRuleCall_5());
		}
		this_Not_5=ruleNot
		{
			$current = $this_Not_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanExpAccess().getEqualsParserRuleCall_6());
		}
		this_Equals_6=ruleEquals
		{
			$current = $this_Equals_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCallVariable
entryRuleCallVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallVariableRule()); }
	iv_ruleCallVariable=ruleCallVariable
	{ $current=$iv_ruleCallVariable.current; }
	EOF;

// Rule CallVariable
ruleCallVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCallVariableAccess().getCallVariableAction_0(),
					$current);
			}
		)
		otherlv_1='CallVariable'
		{
			newLeafNode(otherlv_1, grammarAccess.getCallVariableAccess().getCallVariableKeyword_1());
		}
	)
;

// Entry rule entryRuleArithmetiqueExp_Impl
entryRuleArithmetiqueExp_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmetiqueExp_ImplRule()); }
	iv_ruleArithmetiqueExp_Impl=ruleArithmetiqueExp_Impl
	{ $current=$iv_ruleArithmetiqueExp_Impl.current; }
	EOF;

// Rule ArithmetiqueExp_Impl
ruleArithmetiqueExp_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getArithmetiqueExp_ImplAccess().getArithmetiqueExpAction_0(),
					$current);
			}
		)
		otherlv_1='ArithmetiqueExp'
		{
			newLeafNode(otherlv_1, grammarAccess.getArithmetiqueExp_ImplAccess().getArithmetiqueExpKeyword_1());
		}
	)
;

// Entry rule entryRuleBooleanExp_Impl
entryRuleBooleanExp_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanExp_ImplRule()); }
	iv_ruleBooleanExp_Impl=ruleBooleanExp_Impl
	{ $current=$iv_ruleBooleanExp_Impl.current; }
	EOF;

// Rule BooleanExp_Impl
ruleBooleanExp_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanExp_ImplAccess().getBooleanExpAction_0(),
					$current);
			}
		)
		otherlv_1='BooleanExp'
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanExp_ImplAccess().getBooleanExpKeyword_1());
		}
	)
;

// Entry rule entryRulePlus
entryRulePlus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusRule()); }
	iv_rulePlus=rulePlus
	{ $current=$iv_rulePlus.current; }
	EOF;

// Rule Plus
rulePlus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Plus'
		{
			newLeafNode(otherlv_0, grammarAccess.getPlusAccess().getPlusKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getPlusAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='right'
		{
			newLeafNode(otherlv_2, grammarAccess.getPlusAccess().getRightKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getPlusAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPlusAccess().getRightArithmetiqueExpParserRuleCall_4_0());
				}
				lv_right_4_0=ruleArithmetiqueExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPlusRule());
					}
					add(
						$current,
						"right",
						lv_right_4_0,
						"org.xtext.example.mydsl.MyDsl.ArithmetiqueExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getPlusAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPlusAccess().getRightArithmetiqueExpParserRuleCall_5_1_0());
					}
					lv_right_6_0=ruleArithmetiqueExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlusRule());
						}
						add(
							$current,
							"right",
							lv_right_6_0,
							"org.xtext.example.mydsl.MyDsl.ArithmetiqueExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getPlusAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='left'
		{
			newLeafNode(otherlv_8, grammarAccess.getPlusAccess().getLeftKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPlusAccess().getLeftArithmetiqueExpParserRuleCall_8_0());
				}
				lv_left_9_0=ruleArithmetiqueExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPlusRule());
					}
					set(
						$current,
						"left",
						lv_left_9_0,
						"org.xtext.example.mydsl.MyDsl.ArithmetiqueExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getPlusAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleMinus
entryRuleMinus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinusRule()); }
	iv_ruleMinus=ruleMinus
	{ $current=$iv_ruleMinus.current; }
	EOF;

// Rule Minus
ruleMinus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Minus'
		{
			newLeafNode(otherlv_0, grammarAccess.getMinusAccess().getMinusKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMinusAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='right'
		{
			newLeafNode(otherlv_2, grammarAccess.getMinusAccess().getRightKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMinusAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMinusAccess().getRightArithmetiqueExpParserRuleCall_4_0());
				}
				lv_right_4_0=ruleArithmetiqueExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMinusRule());
					}
					add(
						$current,
						"right",
						lv_right_4_0,
						"org.xtext.example.mydsl.MyDsl.ArithmetiqueExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getMinusAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMinusAccess().getRightArithmetiqueExpParserRuleCall_5_1_0());
					}
					lv_right_6_0=ruleArithmetiqueExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMinusRule());
						}
						add(
							$current,
							"right",
							lv_right_6_0,
							"org.xtext.example.mydsl.MyDsl.ArithmetiqueExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getMinusAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='left'
		{
			newLeafNode(otherlv_8, grammarAccess.getMinusAccess().getLeftKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMinusAccess().getLeftArithmetiqueExpParserRuleCall_8_0());
				}
				lv_left_9_0=ruleArithmetiqueExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMinusRule());
					}
					set(
						$current,
						"left",
						lv_left_9_0,
						"org.xtext.example.mydsl.MyDsl.ArithmetiqueExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getMinusAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleMult
entryRuleMult returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultRule()); }
	iv_ruleMult=ruleMult
	{ $current=$iv_ruleMult.current; }
	EOF;

// Rule Mult
ruleMult returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Mult'
		{
			newLeafNode(otherlv_0, grammarAccess.getMultAccess().getMultKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMultAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='right'
		{
			newLeafNode(otherlv_2, grammarAccess.getMultAccess().getRightKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMultAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMultAccess().getRightArithmetiqueExpParserRuleCall_4_0());
				}
				lv_right_4_0=ruleArithmetiqueExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultRule());
					}
					add(
						$current,
						"right",
						lv_right_4_0,
						"org.xtext.example.mydsl.MyDsl.ArithmetiqueExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getMultAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMultAccess().getRightArithmetiqueExpParserRuleCall_5_1_0());
					}
					lv_right_6_0=ruleArithmetiqueExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultRule());
						}
						add(
							$current,
							"right",
							lv_right_6_0,
							"org.xtext.example.mydsl.MyDsl.ArithmetiqueExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getMultAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='left'
		{
			newLeafNode(otherlv_8, grammarAccess.getMultAccess().getLeftKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMultAccess().getLeftArithmetiqueExpParserRuleCall_8_0());
				}
				lv_left_9_0=ruleArithmetiqueExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultRule());
					}
					set(
						$current,
						"left",
						lv_left_9_0,
						"org.xtext.example.mydsl.MyDsl.ArithmetiqueExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getMultAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleDiv
entryRuleDiv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDivRule()); }
	iv_ruleDiv=ruleDiv
	{ $current=$iv_ruleDiv.current; }
	EOF;

// Rule Div
ruleDiv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Div'
		{
			newLeafNode(otherlv_0, grammarAccess.getDivAccess().getDivKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDivAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='right'
		{
			newLeafNode(otherlv_2, grammarAccess.getDivAccess().getRightKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getDivAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDivAccess().getRightArithmetiqueExpParserRuleCall_4_0());
				}
				lv_right_4_0=ruleArithmetiqueExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDivRule());
					}
					add(
						$current,
						"right",
						lv_right_4_0,
						"org.xtext.example.mydsl.MyDsl.ArithmetiqueExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getDivAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDivAccess().getRightArithmetiqueExpParserRuleCall_5_1_0());
					}
					lv_right_6_0=ruleArithmetiqueExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDivRule());
						}
						add(
							$current,
							"right",
							lv_right_6_0,
							"org.xtext.example.mydsl.MyDsl.ArithmetiqueExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getDivAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='left'
		{
			newLeafNode(otherlv_8, grammarAccess.getDivAccess().getLeftKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDivAccess().getLeftArithmetiqueExpParserRuleCall_8_0());
				}
				lv_left_9_0=ruleArithmetiqueExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDivRule());
					}
					set(
						$current,
						"left",
						lv_left_9_0,
						"org.xtext.example.mydsl.MyDsl.ArithmetiqueExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getDivAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRulePrimaryExprAri
entryRulePrimaryExprAri returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprAriRule()); }
	iv_rulePrimaryExprAri=rulePrimaryExprAri
	{ $current=$iv_rulePrimaryExprAri.current; }
	EOF;

// Rule PrimaryExprAri
rulePrimaryExprAri returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPrimaryExprAriAccess().getPrimaryExprAriAction_0(),
					$current);
			}
		)
		otherlv_1='PrimaryExprAri'
		{
			newLeafNode(otherlv_1, grammarAccess.getPrimaryExprAriAccess().getPrimaryExprAriKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPrimaryExprAriAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='type'
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimaryExprAriAccess().getTypeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAriAccess().getTypeTypeClassParserRuleCall_3_1_0());
					}
					lv_type_4_0=ruleTypeClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprAriRule());
						}
						set(
							$current,
							"type",
							lv_type_4_0,
							"org.xtext.example.mydsl.MyDsl.TypeClass");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='call'
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimaryExprAriAccess().getCallKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAriAccess().getCallCallParserRuleCall_4_1_0());
					}
					lv_call_6_0=ruleCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprAriRule());
						}
						set(
							$current,
							"call",
							lv_call_6_0,
							"org.xtext.example.mydsl.MyDsl.Call");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getPrimaryExprAriAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSecondaryExpAri_Impl
entryRuleSecondaryExpAri_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSecondaryExpAri_ImplRule()); }
	iv_ruleSecondaryExpAri_Impl=ruleSecondaryExpAri_Impl
	{ $current=$iv_ruleSecondaryExpAri_Impl.current; }
	EOF;

// Rule SecondaryExpAri_Impl
ruleSecondaryExpAri_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SecondaryExpAri'
		{
			newLeafNode(otherlv_0, grammarAccess.getSecondaryExpAri_ImplAccess().getSecondaryExpAriKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSecondaryExpAri_ImplAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='right'
		{
			newLeafNode(otherlv_2, grammarAccess.getSecondaryExpAri_ImplAccess().getRightKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSecondaryExpAri_ImplAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSecondaryExpAri_ImplAccess().getRightArithmetiqueExpParserRuleCall_4_0());
				}
				lv_right_4_0=ruleArithmetiqueExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSecondaryExpAri_ImplRule());
					}
					add(
						$current,
						"right",
						lv_right_4_0,
						"org.xtext.example.mydsl.MyDsl.ArithmetiqueExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getSecondaryExpAri_ImplAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSecondaryExpAri_ImplAccess().getRightArithmetiqueExpParserRuleCall_5_1_0());
					}
					lv_right_6_0=ruleArithmetiqueExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSecondaryExpAri_ImplRule());
						}
						add(
							$current,
							"right",
							lv_right_6_0,
							"org.xtext.example.mydsl.MyDsl.ArithmetiqueExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getSecondaryExpAri_ImplAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='left'
		{
			newLeafNode(otherlv_8, grammarAccess.getSecondaryExpAri_ImplAccess().getLeftKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSecondaryExpAri_ImplAccess().getLeftArithmetiqueExpParserRuleCall_8_0());
				}
				lv_left_9_0=ruleArithmetiqueExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSecondaryExpAri_ImplRule());
					}
					set(
						$current,
						"left",
						lv_left_9_0,
						"org.xtext.example.mydsl.MyDsl.ArithmetiqueExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getSecondaryExpAri_ImplAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleCallFunction
entryRuleCallFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallFunctionRule()); }
	iv_ruleCallFunction=ruleCallFunction
	{ $current=$iv_ruleCallFunction.current; }
	EOF;

// Rule CallFunction
ruleCallFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCallFunctionAccess().getCallFunctionAction_0(),
					$current);
			}
		)
		otherlv_1='CallFunction'
		{
			newLeafNode(otherlv_1, grammarAccess.getCallFunctionAccess().getCallFunctionKeyword_1());
		}
	)
;

// Entry rule entryRulePrimaryExprBool
entryRulePrimaryExprBool returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprBoolRule()); }
	iv_rulePrimaryExprBool=rulePrimaryExprBool
	{ $current=$iv_rulePrimaryExprBool.current; }
	EOF;

// Rule PrimaryExprBool
rulePrimaryExprBool returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPrimaryExprBoolAccess().getPrimaryExprBoolAction_0(),
					$current);
			}
		)
		otherlv_1='PrimaryExprBool'
		{
			newLeafNode(otherlv_1, grammarAccess.getPrimaryExprBoolAccess().getPrimaryExprBoolKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPrimaryExprBoolAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='type'
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimaryExprBoolAccess().getTypeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprBoolAccess().getTypeTypeClassParserRuleCall_3_1_0());
					}
					lv_type_4_0=ruleTypeClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprBoolRule());
						}
						set(
							$current,
							"type",
							lv_type_4_0,
							"org.xtext.example.mydsl.MyDsl.TypeClass");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='call'
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimaryExprBoolAccess().getCallKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprBoolAccess().getCallCallParserRuleCall_4_1_0());
					}
					lv_call_6_0=ruleCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprBoolRule());
						}
						set(
							$current,
							"call",
							lv_call_6_0,
							"org.xtext.example.mydsl.MyDsl.Call");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getPrimaryExprBoolAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSecondaryExpBool_Impl
entryRuleSecondaryExpBool_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSecondaryExpBool_ImplRule()); }
	iv_ruleSecondaryExpBool_Impl=ruleSecondaryExpBool_Impl
	{ $current=$iv_ruleSecondaryExpBool_Impl.current; }
	EOF;

// Rule SecondaryExpBool_Impl
ruleSecondaryExpBool_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SecondaryExpBool'
		{
			newLeafNode(otherlv_0, grammarAccess.getSecondaryExpBool_ImplAccess().getSecondaryExpBoolKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSecondaryExpBool_ImplAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='right'
		{
			newLeafNode(otherlv_2, grammarAccess.getSecondaryExpBool_ImplAccess().getRightKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSecondaryExpBool_ImplAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSecondaryExpBool_ImplAccess().getRightBooleanExpParserRuleCall_4_0());
				}
				lv_right_4_0=ruleBooleanExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSecondaryExpBool_ImplRule());
					}
					add(
						$current,
						"right",
						lv_right_4_0,
						"org.xtext.example.mydsl.MyDsl.BooleanExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getSecondaryExpBool_ImplAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSecondaryExpBool_ImplAccess().getRightBooleanExpParserRuleCall_5_1_0());
					}
					lv_right_6_0=ruleBooleanExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSecondaryExpBool_ImplRule());
						}
						add(
							$current,
							"right",
							lv_right_6_0,
							"org.xtext.example.mydsl.MyDsl.BooleanExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getSecondaryExpBool_ImplAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='left'
		{
			newLeafNode(otherlv_8, grammarAccess.getSecondaryExpBool_ImplAccess().getLeftKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSecondaryExpBool_ImplAccess().getLeftBooleanExpParserRuleCall_8_0());
				}
				lv_left_9_0=ruleBooleanExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSecondaryExpBool_ImplRule());
					}
					set(
						$current,
						"left",
						lv_left_9_0,
						"org.xtext.example.mydsl.MyDsl.BooleanExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getSecondaryExpBool_ImplAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	iv_ruleAnd=ruleAnd
	{ $current=$iv_ruleAnd.current; }
	EOF;

// Rule And
ruleAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='And'
		{
			newLeafNode(otherlv_0, grammarAccess.getAndAccess().getAndKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAndAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='right'
		{
			newLeafNode(otherlv_2, grammarAccess.getAndAccess().getRightKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getAndAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAndAccess().getRightBooleanExpParserRuleCall_4_0());
				}
				lv_right_4_0=ruleBooleanExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndRule());
					}
					add(
						$current,
						"right",
						lv_right_4_0,
						"org.xtext.example.mydsl.MyDsl.BooleanExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getAndAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndAccess().getRightBooleanExpParserRuleCall_5_1_0());
					}
					lv_right_6_0=ruleBooleanExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndRule());
						}
						add(
							$current,
							"right",
							lv_right_6_0,
							"org.xtext.example.mydsl.MyDsl.BooleanExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getAndAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='left'
		{
			newLeafNode(otherlv_8, grammarAccess.getAndAccess().getLeftKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAndAccess().getLeftBooleanExpParserRuleCall_8_0());
				}
				lv_left_9_0=ruleBooleanExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndRule());
					}
					set(
						$current,
						"left",
						lv_left_9_0,
						"org.xtext.example.mydsl.MyDsl.BooleanExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getAndAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	iv_ruleOr=ruleOr
	{ $current=$iv_ruleOr.current; }
	EOF;

// Rule Or
ruleOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Or'
		{
			newLeafNode(otherlv_0, grammarAccess.getOrAccess().getOrKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='right'
		{
			newLeafNode(otherlv_2, grammarAccess.getOrAccess().getRightKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getOrAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrAccess().getRightBooleanExpParserRuleCall_4_0());
				}
				lv_right_4_0=ruleBooleanExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrRule());
					}
					add(
						$current,
						"right",
						lv_right_4_0,
						"org.xtext.example.mydsl.MyDsl.BooleanExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getOrAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrAccess().getRightBooleanExpParserRuleCall_5_1_0());
					}
					lv_right_6_0=ruleBooleanExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrRule());
						}
						add(
							$current,
							"right",
							lv_right_6_0,
							"org.xtext.example.mydsl.MyDsl.BooleanExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getOrAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='left'
		{
			newLeafNode(otherlv_8, grammarAccess.getOrAccess().getLeftKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrAccess().getLeftBooleanExpParserRuleCall_8_0());
				}
				lv_left_9_0=ruleBooleanExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrRule());
					}
					set(
						$current,
						"left",
						lv_left_9_0,
						"org.xtext.example.mydsl.MyDsl.BooleanExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getOrAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleNot
entryRuleNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotRule()); }
	iv_ruleNot=ruleNot
	{ $current=$iv_ruleNot.current; }
	EOF;

// Rule Not
ruleNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Not'
		{
			newLeafNode(otherlv_0, grammarAccess.getNotAccess().getNotKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getNotAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='right'
		{
			newLeafNode(otherlv_2, grammarAccess.getNotAccess().getRightKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getNotAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNotAccess().getRightBooleanExpParserRuleCall_4_0());
				}
				lv_right_4_0=ruleBooleanExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNotRule());
					}
					add(
						$current,
						"right",
						lv_right_4_0,
						"org.xtext.example.mydsl.MyDsl.BooleanExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getNotAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNotAccess().getRightBooleanExpParserRuleCall_5_1_0());
					}
					lv_right_6_0=ruleBooleanExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNotRule());
						}
						add(
							$current,
							"right",
							lv_right_6_0,
							"org.xtext.example.mydsl.MyDsl.BooleanExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getNotAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='left'
		{
			newLeafNode(otherlv_8, grammarAccess.getNotAccess().getLeftKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNotAccess().getLeftBooleanExpParserRuleCall_8_0());
				}
				lv_left_9_0=ruleBooleanExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNotRule());
					}
					set(
						$current,
						"left",
						lv_left_9_0,
						"org.xtext.example.mydsl.MyDsl.BooleanExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getNotAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleEquals
entryRuleEquals returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualsRule()); }
	iv_ruleEquals=ruleEquals
	{ $current=$iv_ruleEquals.current; }
	EOF;

// Rule Equals
ruleEquals returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Equals'
		{
			newLeafNode(otherlv_0, grammarAccess.getEqualsAccess().getEqualsKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getEqualsAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='right'
		{
			newLeafNode(otherlv_2, grammarAccess.getEqualsAccess().getRightKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getEqualsAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEqualsAccess().getRightBooleanExpParserRuleCall_4_0());
				}
				lv_right_4_0=ruleBooleanExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEqualsRule());
					}
					add(
						$current,
						"right",
						lv_right_4_0,
						"org.xtext.example.mydsl.MyDsl.BooleanExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getEqualsAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualsAccess().getRightBooleanExpParserRuleCall_5_1_0());
					}
					lv_right_6_0=ruleBooleanExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualsRule());
						}
						add(
							$current,
							"right",
							lv_right_6_0,
							"org.xtext.example.mydsl.MyDsl.BooleanExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getEqualsAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='left'
		{
			newLeafNode(otherlv_8, grammarAccess.getEqualsAccess().getLeftKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEqualsAccess().getLeftBooleanExpParserRuleCall_8_0());
				}
				lv_left_9_0=ruleBooleanExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEqualsRule());
					}
					set(
						$current,
						"left",
						lv_left_9_0,
						"org.xtext.example.mydsl.MyDsl.BooleanExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getEqualsAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleCM
entryRuleCM returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCMRule()); }
	iv_ruleCM=ruleCM
	{ $current=$iv_ruleCM.current; }
	EOF;

// Rule CM
ruleCM returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCMAccess().getCMAction_0(),
					$current);
			}
		)
		otherlv_1='CM'
		{
			newLeafNode(otherlv_1, grammarAccess.getCMAccess().getCMKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCMAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='distance'
			{
				newLeafNode(otherlv_3, grammarAccess.getCMAccess().getDistanceKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCMAccess().getDistanceEDoubleParserRuleCall_3_1_0());
					}
					lv_distance_4_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCMRule());
						}
						set(
							$current,
							"distance",
							lv_distance_4_0,
							"org.xtext.example.mydsl.MyDsl.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getCMAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulemm
entryRulemm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMmRule()); }
	iv_rulemm=rulemm
	{ $current=$iv_rulemm.current; }
	EOF;

// Rule mm
rulemm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMmAccess().getMmAction_0(),
					$current);
			}
		)
		otherlv_1='mm'
		{
			newLeafNode(otherlv_1, grammarAccess.getMmAccess().getMmKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMmAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='distance'
			{
				newLeafNode(otherlv_3, grammarAccess.getMmAccess().getDistanceKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMmAccess().getDistanceEDoubleParserRuleCall_3_1_0());
					}
					lv_distance_4_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMmRule());
						}
						set(
							$current,
							"distance",
							lv_distance_4_0,
							"org.xtext.example.mydsl.MyDsl.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getMmAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleBooleanType
entryRuleBooleanType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanTypeRule()); }
	iv_ruleBooleanType=ruleBooleanType
	{ $current=$iv_ruleBooleanType.current; }
	EOF;

// Rule BooleanType
ruleBooleanType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanTypeAccess().getBooleanTypeAction_0(),
					$current);
			}
		)
		(
			(
				lv_value_1_0='value'
				{
					newLeafNode(lv_value_1_0, grammarAccess.getBooleanTypeAccess().getValueValueKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_1_0 != null, "value");
				}
			)
		)?
		otherlv_2='BooleanType'
		{
			newLeafNode(otherlv_2, grammarAccess.getBooleanTypeAccess().getBooleanTypeKeyword_2());
		}
	)
;

// Entry rule entryRuleNumberType
entryRuleNumberType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberTypeRule()); }
	iv_ruleNumberType=ruleNumberType
	{ $current=$iv_ruleNumberType.current; }
	EOF;

// Rule NumberType
ruleNumberType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNumberTypeAccess().getNumberTypeAction_0(),
					$current);
			}
		)
		otherlv_1='NumberType'
		{
			newLeafNode(otherlv_1, grammarAccess.getNumberTypeAccess().getNumberTypeKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getNumberTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='value'
			{
				newLeafNode(otherlv_3, grammarAccess.getNumberTypeAccess().getValueKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNumberTypeAccess().getValueEDoubleParserRuleCall_3_1_0());
					}
					lv_value_4_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNumberTypeRule());
						}
						set(
							$current,
							"value",
							lv_value_4_0,
							"org.xtext.example.mydsl.MyDsl.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getNumberTypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
