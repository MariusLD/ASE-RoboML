/*
 * generated by Xtext 2.32.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl2.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl2.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl2.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Robot";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRobot
entryRuleRobot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRobotRule()); }
	iv_ruleRobot=ruleRobot
	{ $current=$iv_ruleRobot.current; }
	EOF;

// Rule Robot
ruleRobot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRobotAccess().getRobotAction_0(),
					$current);
			}
		)
		otherlv_1='Robot'
		{
			newLeafNode(otherlv_1, grammarAccess.getRobotAccess().getRobotKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='function'
			{
				newLeafNode(otherlv_3, grammarAccess.getRobotAccess().getFunctionKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotAccess().getFunctionFunctionParserRuleCall_3_2_0());
					}
					lv_function_5_0=ruleFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotRule());
						}
						add(
							$current,
							"function",
							lv_function_5_0,
							"org.xtext.example.mydsl2.MyDsl.Function");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getRobotAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRobotAccess().getFunctionFunctionParserRuleCall_3_3_1_0());
						}
						lv_function_7_0=ruleFunction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRobotRule());
							}
							add(
								$current,
								"function",
								lv_function_7_0,
								"org.xtext.example.mydsl2.MyDsl.Function");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleInstruction
entryRuleInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionRule()); }
	iv_ruleInstruction=ruleInstruction
	{ $current=$iv_ruleInstruction.current; }
	EOF;

// Rule Instruction
ruleInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getRotateCommandParserRuleCall_0());
		}
		this_RotateCommand_0=ruleRotateCommand
		{
			$current = $this_RotateCommand_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getDirectionCommandParserRuleCall_1());
		}
		this_DirectionCommand_1=ruleDirectionCommand
		{
			$current = $this_DirectionCommand_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getSpeedCommandParserRuleCall_2());
		}
		this_SpeedCommand_2=ruleSpeedCommand
		{
			$current = $this_SpeedCommand_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getDistanceSensorCommandParserRuleCall_3());
		}
		this_DistanceSensorCommand_3=ruleDistanceSensorCommand
		{
			$current = $this_DistanceSensorCommand_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getTimeSensorCommandParserRuleCall_4());
		}
		this_TimeSensorCommand_4=ruleTimeSensorCommand
		{
			$current = $this_TimeSensorCommand_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getBooleanExp_ImplParserRuleCall_5());
		}
		this_BooleanExp_Impl_5=ruleBooleanExp_Impl
		{
			$current = $this_BooleanExp_Impl_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getPlusMinusParserRuleCall_6());
		}
		this_PlusMinus_6=rulePlusMinus
		{
			$current = $this_PlusMinus_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getMultDivParserRuleCall_7());
		}
		this_MultDiv_7=ruleMultDiv
		{
			$current = $this_MultDiv_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getPrimaryExprAriParserRuleCall_8());
		}
		this_PrimaryExprAri_8=rulePrimaryExprAri
		{
			$current = $this_PrimaryExprAri_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getDeclarationVariableParserRuleCall_9());
		}
		this_DeclarationVariable_9=ruleDeclarationVariable
		{
			$current = $this_DeclarationVariable_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getLOOPParserRuleCall_10());
		}
		this_LOOP_10=ruleLOOP
		{
			$current = $this_LOOP_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getIFParserRuleCall_11());
		}
		this_IF_11=ruleIF
		{
			$current = $this_IF_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getCallVariableParserRuleCall_12());
		}
		this_CallVariable_12=ruleCallVariable
		{
			$current = $this_CallVariable_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getCallFunctionParserRuleCall_13());
		}
		this_CallFunction_13=ruleCallFunction
		{
			$current = $this_CallFunction_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getAffectationParserRuleCall_14());
		}
		this_Affectation_14=ruleAffectation
		{
			$current = $this_Affectation_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getPrimaryExprBoolParserRuleCall_15());
		}
		this_PrimaryExprBool_15=rulePrimaryExprBool
		{
			$current = $this_PrimaryExprBool_15.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getAndParserRuleCall_16());
		}
		this_And_16=ruleAnd
		{
			$current = $this_And_16.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getOrParserRuleCall_17());
		}
		this_Or_17=ruleOr
		{
			$current = $this_Or_17.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getNotParserRuleCall_18());
		}
		this_Not_18=ruleNot
		{
			$current = $this_Not_18.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getEqualsParserRuleCall_19());
		}
		this_Equals_19=ruleEquals
		{
			$current = $this_Equals_19.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getPlusMinusDistanceParserRuleCall_20());
		}
		this_PlusMinusDistance_20=rulePlusMinusDistance
		{
			$current = $this_PlusMinusDistance_20.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getMultDivDistanceParserRuleCall_21());
		}
		this_MultDivDistance_21=ruleMultDivDistance
		{
			$current = $this_MultDivDistance_21.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getPrimaryExprDistanceParserRuleCall_22());
		}
		this_PrimaryExprDistance_22=rulePrimaryExprDistance
		{
			$current = $this_PrimaryExprDistance_22.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getPlusMinusTimeParserRuleCall_23());
		}
		this_PlusMinusTime_23=rulePlusMinusTime
		{
			$current = $this_PlusMinusTime_23.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getMultDiveTimeParserRuleCall_24());
		}
		this_MultDiveTime_24=ruleMultDiveTime
		{
			$current = $this_MultDiveTime_24.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getPrimaryExprTimeParserRuleCall_25());
		}
		this_PrimaryExprTime_25=rulePrimaryExprTime
		{
			$current = $this_PrimaryExprTime_25.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getComparaisonDistanceParserRuleCall_26());
		}
		this_ComparaisonDistance_26=ruleComparaisonDistance
		{
			$current = $this_ComparaisonDistance_26.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getComparaisonTimeParserRuleCall_27());
		}
		this_ComparaisonTime_27=ruleComparaisonTime
		{
			$current = $this_ComparaisonTime_27.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getComparaisonAriParserRuleCall_28());
		}
		this_ComparaisonAri_28=ruleComparaisonAri
		{
			$current = $this_ComparaisonAri_28.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeClass
entryRuleTypeClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeClassRule()); }
	iv_ruleTypeClass=ruleTypeClass
	{ $current=$iv_ruleTypeClass.current; }
	EOF;

// Rule TypeClass
ruleTypeClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeClassAccess().getCMParserRuleCall_0());
		}
		this_CM_0=ruleCM
		{
			$current = $this_CM_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeClassAccess().getMmParserRuleCall_1());
		}
		this_mm_1=rulemm
		{
			$current = $this_mm_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeClassAccess().getBooleanTypeParserRuleCall_2());
		}
		this_BooleanType_2=ruleBooleanType
		{
			$current = $this_BooleanType_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeClassAccess().getNumberTypeParserRuleCall_3());
		}
		this_NumberType_3=ruleNumberType
		{
			$current = $this_NumberType_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeClassAccess().getTimeParserRuleCall_4());
		}
		this_Time_4=ruleTime
		{
			$current = $this_Time_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDistance
entryRuleDistance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDistanceRule()); }
	iv_ruleDistance=ruleDistance
	{ $current=$iv_ruleDistance.current; }
	EOF;

// Rule Distance
ruleDistance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDistanceAccess().getCMParserRuleCall_0());
		}
		this_CM_0=ruleCM
		{
			$current = $this_CM_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDistanceAccess().getMmParserRuleCall_1());
		}
		this_mm_1=rulemm
		{
			$current = $this_mm_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCall
entryRuleCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallRule()); }
	iv_ruleCall=ruleCall
	{ $current=$iv_ruleCall.current; }
	EOF;

// Rule Call
ruleCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCallAccess().getCallVariableParserRuleCall_0());
		}
		this_CallVariable_0=ruleCallVariable
		{
			$current = $this_CallVariable_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCallAccess().getCallFunctionParserRuleCall_1());
		}
		this_CallFunction_1=ruleCallFunction
		{
			$current = $this_CallFunction_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpressionBase
entryRuleExpressionBase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionBaseRule()); }
	iv_ruleExpressionBase=ruleExpressionBase
	{ $current=$iv_ruleExpressionBase.current; }
	EOF;

// Rule ExpressionBase
ruleExpressionBase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getBooleanExp_ImplParserRuleCall_0());
		}
		this_BooleanExp_Impl_0=ruleBooleanExp_Impl
		{
			$current = $this_BooleanExp_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getPlusMinusParserRuleCall_1());
		}
		this_PlusMinus_1=rulePlusMinus
		{
			$current = $this_PlusMinus_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getMultDivParserRuleCall_2());
		}
		this_MultDiv_2=ruleMultDiv
		{
			$current = $this_MultDiv_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getPrimaryExprAriParserRuleCall_3());
		}
		this_PrimaryExprAri_3=rulePrimaryExprAri
		{
			$current = $this_PrimaryExprAri_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getCallVariableParserRuleCall_4());
		}
		this_CallVariable_4=ruleCallVariable
		{
			$current = $this_CallVariable_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getCallFunctionParserRuleCall_5());
		}
		this_CallFunction_5=ruleCallFunction
		{
			$current = $this_CallFunction_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getAffectationParserRuleCall_6());
		}
		this_Affectation_6=ruleAffectation
		{
			$current = $this_Affectation_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getPrimaryExprBoolParserRuleCall_7());
		}
		this_PrimaryExprBool_7=rulePrimaryExprBool
		{
			$current = $this_PrimaryExprBool_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getAndParserRuleCall_8());
		}
		this_And_8=ruleAnd
		{
			$current = $this_And_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getOrParserRuleCall_9());
		}
		this_Or_9=ruleOr
		{
			$current = $this_Or_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getNotParserRuleCall_10());
		}
		this_Not_10=ruleNot
		{
			$current = $this_Not_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getEqualsParserRuleCall_11());
		}
		this_Equals_11=ruleEquals
		{
			$current = $this_Equals_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getPlusMinusDistanceParserRuleCall_12());
		}
		this_PlusMinusDistance_12=rulePlusMinusDistance
		{
			$current = $this_PlusMinusDistance_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getMultDivDistanceParserRuleCall_13());
		}
		this_MultDivDistance_13=ruleMultDivDistance
		{
			$current = $this_MultDivDistance_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getPrimaryExprDistanceParserRuleCall_14());
		}
		this_PrimaryExprDistance_14=rulePrimaryExprDistance
		{
			$current = $this_PrimaryExprDistance_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getPlusMinusTimeParserRuleCall_15());
		}
		this_PlusMinusTime_15=rulePlusMinusTime
		{
			$current = $this_PlusMinusTime_15.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getMultDiveTimeParserRuleCall_16());
		}
		this_MultDiveTime_16=ruleMultDiveTime
		{
			$current = $this_MultDiveTime_16.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getPrimaryExprTimeParserRuleCall_17());
		}
		this_PrimaryExprTime_17=rulePrimaryExprTime
		{
			$current = $this_PrimaryExprTime_17.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getComparaisonDistanceParserRuleCall_18());
		}
		this_ComparaisonDistance_18=ruleComparaisonDistance
		{
			$current = $this_ComparaisonDistance_18.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getComparaisonTimeParserRuleCall_19());
		}
		this_ComparaisonTime_19=ruleComparaisonTime
		{
			$current = $this_ComparaisonTime_19.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionBaseAccess().getComparaisonAriParserRuleCall_20());
		}
		this_ComparaisonAri_20=ruleComparaisonAri
		{
			$current = $this_ComparaisonAri_20.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getBooleanExp_ImplParserRuleCall_0());
		}
		this_BooleanExp_Impl_0=ruleBooleanExp_Impl
		{
			$current = $this_BooleanExp_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getPlusMinusParserRuleCall_1());
		}
		this_PlusMinus_1=rulePlusMinus
		{
			$current = $this_PlusMinus_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getMultDivParserRuleCall_2());
		}
		this_MultDiv_2=ruleMultDiv
		{
			$current = $this_MultDiv_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getPrimaryExprAriParserRuleCall_3());
		}
		this_PrimaryExprAri_3=rulePrimaryExprAri
		{
			$current = $this_PrimaryExprAri_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getPrimaryExprBoolParserRuleCall_4());
		}
		this_PrimaryExprBool_4=rulePrimaryExprBool
		{
			$current = $this_PrimaryExprBool_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getAndParserRuleCall_5());
		}
		this_And_5=ruleAnd
		{
			$current = $this_And_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getOrParserRuleCall_6());
		}
		this_Or_6=ruleOr
		{
			$current = $this_Or_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getNotParserRuleCall_7());
		}
		this_Not_7=ruleNot
		{
			$current = $this_Not_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getEqualsParserRuleCall_8());
		}
		this_Equals_8=ruleEquals
		{
			$current = $this_Equals_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getPlusMinusDistanceParserRuleCall_9());
		}
		this_PlusMinusDistance_9=rulePlusMinusDistance
		{
			$current = $this_PlusMinusDistance_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getMultDivDistanceParserRuleCall_10());
		}
		this_MultDivDistance_10=ruleMultDivDistance
		{
			$current = $this_MultDivDistance_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getPrimaryExprDistanceParserRuleCall_11());
		}
		this_PrimaryExprDistance_11=rulePrimaryExprDistance
		{
			$current = $this_PrimaryExprDistance_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getPlusMinusTimeParserRuleCall_12());
		}
		this_PlusMinusTime_12=rulePlusMinusTime
		{
			$current = $this_PlusMinusTime_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getMultDiveTimeParserRuleCall_13());
		}
		this_MultDiveTime_13=ruleMultDiveTime
		{
			$current = $this_MultDiveTime_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getPrimaryExprTimeParserRuleCall_14());
		}
		this_PrimaryExprTime_14=rulePrimaryExprTime
		{
			$current = $this_PrimaryExprTime_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getComparaisonDistanceParserRuleCall_15());
		}
		this_ComparaisonDistance_15=ruleComparaisonDistance
		{
			$current = $this_ComparaisonDistance_15.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getComparaisonTimeParserRuleCall_16());
		}
		this_ComparaisonTime_16=ruleComparaisonTime
		{
			$current = $this_ComparaisonTime_16.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getComparaisonAriParserRuleCall_17());
		}
		this_ComparaisonAri_17=ruleComparaisonAri
		{
			$current = $this_ComparaisonAri_17.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionAccess().getFunctionAction_0(),
					$current);
			}
		)
		otherlv_1='Function'
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getFunctionKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='instruction'
			{
				newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getInstructionKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getInstructionInstructionParserRuleCall_3_2_0());
					}
					lv_instruction_5_0=ruleInstruction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						add(
							$current,
							"instruction",
							lv_instruction_5_0,
							"org.xtext.example.mydsl2.MyDsl.Instruction");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getFunctionAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionAccess().getInstructionInstructionParserRuleCall_3_3_1_0());
						}
						lv_instruction_7_0=ruleInstruction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionRule());
							}
							add(
								$current,
								"instruction",
								lv_instruction_7_0,
								"org.xtext.example.mydsl2.MyDsl.Instruction");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='parameters'
			{
				newLeafNode(otherlv_9, grammarAccess.getFunctionAccess().getParametersKeyword_4_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getParametersTypeClassParserRuleCall_4_2_0());
					}
					lv_parameters_11_0=ruleTypeClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_11_0,
							"org.xtext.example.mydsl2.MyDsl.TypeClass");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getFunctionAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionAccess().getParametersTypeClassParserRuleCall_4_3_1_0());
						}
						lv_parameters_13_0=ruleTypeClass
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_13_0,
								"org.xtext.example.mydsl2.MyDsl.TypeClass");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_15='return'
			{
				newLeafNode(otherlv_15, grammarAccess.getFunctionAccess().getReturnKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getReturnTypeClassParserRuleCall_5_1_0());
					}
					lv_return_16_0=ruleTypeClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						set(
							$current,
							"return",
							lv_return_16_0,
							"org.xtext.example.mydsl2.MyDsl.TypeClass");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleRotateCommand
entryRuleRotateCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRotateCommandRule()); }
	iv_ruleRotateCommand=ruleRotateCommand
	{ $current=$iv_ruleRotateCommand.current; }
	EOF;

// Rule RotateCommand
ruleRotateCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRotateCommandAccess().getRotateCommandAction_0(),
					$current);
			}
		)
		otherlv_1='RotateCommand'
		{
			newLeafNode(otherlv_1, grammarAccess.getRotateCommandAccess().getRotateCommandKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRotateCommandAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='angle'
			{
				newLeafNode(otherlv_3, grammarAccess.getRotateCommandAccess().getAngleKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRotateCommandAccess().getAngleEDoubleParserRuleCall_3_1_0());
					}
					lv_angle_4_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRotateCommandRule());
						}
						set(
							$current,
							"angle",
							lv_angle_4_0,
							"org.xtext.example.mydsl2.MyDsl.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getRotateCommandAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDirectionCommand
entryRuleDirectionCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectionCommandRule()); }
	iv_ruleDirectionCommand=ruleDirectionCommand
	{ $current=$iv_ruleDirectionCommand.current; }
	EOF;

// Rule DirectionCommand
ruleDirectionCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DirectionCommand'
		{
			newLeafNode(otherlv_0, grammarAccess.getDirectionCommandAccess().getDirectionCommandKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDirectionCommandAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='distance'
		{
			newLeafNode(otherlv_2, grammarAccess.getDirectionCommandAccess().getDistanceKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDirectionCommandAccess().getDistanceDistanceParserRuleCall_3_0());
				}
				lv_distance_3_0=ruleDistance
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDirectionCommandRule());
					}
					set(
						$current,
						"distance",
						lv_distance_3_0,
						"org.xtext.example.mydsl2.MyDsl.Distance");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getDirectionCommandAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSpeedCommand
entryRuleSpeedCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpeedCommandRule()); }
	iv_ruleSpeedCommand=ruleSpeedCommand
	{ $current=$iv_ruleSpeedCommand.current; }
	EOF;

// Rule SpeedCommand
ruleSpeedCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSpeedCommandAccess().getSpeedCommandAction_0(),
					$current);
			}
		)
		otherlv_1='SpeedCommand'
		{
			newLeafNode(otherlv_1, grammarAccess.getSpeedCommandAccess().getSpeedCommandKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSpeedCommandAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='speed'
			{
				newLeafNode(otherlv_3, grammarAccess.getSpeedCommandAccess().getSpeedKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSpeedCommandAccess().getSpeedEDoubleParserRuleCall_3_1_0());
					}
					lv_speed_4_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSpeedCommandRule());
						}
						set(
							$current,
							"speed",
							lv_speed_4_0,
							"org.xtext.example.mydsl2.MyDsl.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getSpeedCommandAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDistanceSensorCommand
entryRuleDistanceSensorCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDistanceSensorCommandRule()); }
	iv_ruleDistanceSensorCommand=ruleDistanceSensorCommand
	{ $current=$iv_ruleDistanceSensorCommand.current; }
	EOF;

// Rule DistanceSensorCommand
ruleDistanceSensorCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDistanceSensorCommandAccess().getDistanceSensorCommandAction_0(),
					$current);
			}
		)
		otherlv_1='DistanceSensorCommand'
		{
			newLeafNode(otherlv_1, grammarAccess.getDistanceSensorCommandAccess().getDistanceSensorCommandKeyword_1());
		}
	)
;

// Entry rule entryRuleTimeSensorCommand
entryRuleTimeSensorCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeSensorCommandRule()); }
	iv_ruleTimeSensorCommand=ruleTimeSensorCommand
	{ $current=$iv_ruleTimeSensorCommand.current; }
	EOF;

// Rule TimeSensorCommand
ruleTimeSensorCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTimeSensorCommandAccess().getTimeSensorCommandAction_0(),
					$current);
			}
		)
		otherlv_1='TimeSensorCommand'
		{
			newLeafNode(otherlv_1, grammarAccess.getTimeSensorCommandAccess().getTimeSensorCommandKeyword_1());
		}
	)
;

// Entry rule entryRuleBooleanExp_Impl
entryRuleBooleanExp_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanExp_ImplRule()); }
	iv_ruleBooleanExp_Impl=ruleBooleanExp_Impl
	{ $current=$iv_ruleBooleanExp_Impl.current; }
	EOF;

// Rule BooleanExp_Impl
ruleBooleanExp_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanExp_ImplAccess().getBooleanExpAction_0(),
					$current);
			}
		)
		otherlv_1='BooleanExp'
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanExp_ImplAccess().getBooleanExpKeyword_1());
		}
	)
;

// Entry rule entryRulePlusMinus
entryRulePlusMinus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusMinusRule()); }
	iv_rulePlusMinus=rulePlusMinus
	{ $current=$iv_rulePlusMinus.current; }
	EOF;

// Rule PlusMinus
rulePlusMinus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPlusMinusAccess().getPlusMinusAction_0(),
					$current);
			}
		)
		otherlv_1='PlusMinus'
		{
			newLeafNode(otherlv_1, grammarAccess.getPlusMinusAccess().getPlusMinusKeyword_1());
		}
	)
;

// Entry rule entryRuleMultDiv
entryRuleMultDiv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultDivRule()); }
	iv_ruleMultDiv=ruleMultDiv
	{ $current=$iv_ruleMultDiv.current; }
	EOF;

// Rule MultDiv
ruleMultDiv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMultDivAccess().getMultDivAction_0(),
					$current);
			}
		)
		otherlv_1='MultDiv'
		{
			newLeafNode(otherlv_1, grammarAccess.getMultDivAccess().getMultDivKeyword_1());
		}
	)
;

// Entry rule entryRulePrimaryExprAri
entryRulePrimaryExprAri returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprAriRule()); }
	iv_rulePrimaryExprAri=rulePrimaryExprAri
	{ $current=$iv_rulePrimaryExprAri.current; }
	EOF;

// Rule PrimaryExprAri
rulePrimaryExprAri returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPrimaryExprAriAccess().getPrimaryExprAriAction_0(),
					$current);
			}
		)
		otherlv_1='PrimaryExprAri'
		{
			newLeafNode(otherlv_1, grammarAccess.getPrimaryExprAriAccess().getPrimaryExprAriKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPrimaryExprAriAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='type'
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimaryExprAriAccess().getTypeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAriAccess().getTypeTypeClassParserRuleCall_3_1_0());
					}
					lv_type_4_0=ruleTypeClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprAriRule());
						}
						set(
							$current,
							"type",
							lv_type_4_0,
							"org.xtext.example.mydsl2.MyDsl.TypeClass");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='call'
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimaryExprAriAccess().getCallKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAriAccess().getCallCallParserRuleCall_4_1_0());
					}
					lv_call_6_0=ruleCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprAriRule());
						}
						set(
							$current,
							"call",
							lv_call_6_0,
							"org.xtext.example.mydsl2.MyDsl.Call");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getPrimaryExprAriAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDeclarationVariable
entryRuleDeclarationVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationVariableRule()); }
	iv_ruleDeclarationVariable=ruleDeclarationVariable
	{ $current=$iv_ruleDeclarationVariable.current; }
	EOF;

// Rule DeclarationVariable
ruleDeclarationVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DeclarationVariable'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeclarationVariableAccess().getDeclarationVariableKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeclarationVariableAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='nom'
			{
				newLeafNode(otherlv_2, grammarAccess.getDeclarationVariableAccess().getNomKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarationVariableAccess().getNomEStringParserRuleCall_2_1_0());
					}
					lv_nom_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarationVariableRule());
						}
						set(
							$current,
							"nom",
							lv_nom_3_0,
							"org.xtext.example.mydsl2.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='expressionbase'
			{
				newLeafNode(otherlv_4, grammarAccess.getDeclarationVariableAccess().getExpressionbaseKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarationVariableAccess().getExpressionbaseExpressionBaseParserRuleCall_3_1_0());
					}
					lv_expressionbase_5_0=ruleExpressionBase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarationVariableRule());
						}
						set(
							$current,
							"expressionbase",
							lv_expressionbase_5_0,
							"org.xtext.example.mydsl2.MyDsl.ExpressionBase");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='type'
		{
			newLeafNode(otherlv_6, grammarAccess.getDeclarationVariableAccess().getTypeKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationVariableAccess().getTypeTypeClassParserRuleCall_5_0());
				}
				lv_type_7_0=ruleTypeClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationVariableRule());
					}
					set(
						$current,
						"type",
						lv_type_7_0,
						"org.xtext.example.mydsl2.MyDsl.TypeClass");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getDeclarationVariableAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleLOOP
entryRuleLOOP returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLOOPRule()); }
	iv_ruleLOOP=ruleLOOP
	{ $current=$iv_ruleLOOP.current; }
	EOF;

// Rule LOOP
ruleLOOP returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LOOP'
		{
			newLeafNode(otherlv_0, grammarAccess.getLOOPAccess().getLOOPKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLOOPAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='instruction'
			{
				newLeafNode(otherlv_2, grammarAccess.getLOOPAccess().getInstructionKeyword_2_0());
			}
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getLOOPAccess().getLeftCurlyBracketKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLOOPAccess().getInstructionInstructionParserRuleCall_2_2_0());
					}
					lv_instruction_4_0=ruleInstruction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLOOPRule());
						}
						add(
							$current,
							"instruction",
							lv_instruction_4_0,
							"org.xtext.example.mydsl2.MyDsl.Instruction");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getLOOPAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLOOPAccess().getInstructionInstructionParserRuleCall_2_3_1_0());
						}
						lv_instruction_6_0=ruleInstruction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLOOPRule());
							}
							add(
								$current,
								"instruction",
								lv_instruction_6_0,
								"org.xtext.example.mydsl2.MyDsl.Instruction");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getLOOPAccess().getRightCurlyBracketKeyword_2_4());
			}
		)?
		otherlv_8='expression'
		{
			newLeafNode(otherlv_8, grammarAccess.getLOOPAccess().getExpressionKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLOOPAccess().getExpressionExpressionParserRuleCall_4_0());
				}
				lv_expression_9_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLOOPRule());
					}
					set(
						$current,
						"expression",
						lv_expression_9_0,
						"org.xtext.example.mydsl2.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getLOOPAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleIF
entryRuleIF returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIFRule()); }
	iv_ruleIF=ruleIF
	{ $current=$iv_ruleIF.current; }
	EOF;

// Rule IF
ruleIF returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='IF'
		{
			newLeafNode(otherlv_0, grammarAccess.getIFAccess().getIFKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getIFAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='instruction'
			{
				newLeafNode(otherlv_2, grammarAccess.getIFAccess().getInstructionKeyword_2_0());
			}
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getIFAccess().getLeftCurlyBracketKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIFAccess().getInstructionInstructionParserRuleCall_2_2_0());
					}
					lv_instruction_4_0=ruleInstruction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIFRule());
						}
						add(
							$current,
							"instruction",
							lv_instruction_4_0,
							"org.xtext.example.mydsl2.MyDsl.Instruction");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getIFAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getIFAccess().getInstructionInstructionParserRuleCall_2_3_1_0());
						}
						lv_instruction_6_0=ruleInstruction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIFRule());
							}
							add(
								$current,
								"instruction",
								lv_instruction_6_0,
								"org.xtext.example.mydsl2.MyDsl.Instruction");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getIFAccess().getRightCurlyBracketKeyword_2_4());
			}
		)?
		otherlv_8='expression'
		{
			newLeafNode(otherlv_8, grammarAccess.getIFAccess().getExpressionKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIFAccess().getExpressionExpressionParserRuleCall_4_0());
				}
				lv_expression_9_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIFRule());
					}
					set(
						$current,
						"expression",
						lv_expression_9_0,
						"org.xtext.example.mydsl2.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getIFAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleCallVariable
entryRuleCallVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallVariableRule()); }
	iv_ruleCallVariable=ruleCallVariable
	{ $current=$iv_ruleCallVariable.current; }
	EOF;

// Rule CallVariable
ruleCallVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCallVariableAccess().getCallVariableAction_0(),
					$current);
			}
		)
		otherlv_1='CallVariable'
		{
			newLeafNode(otherlv_1, grammarAccess.getCallVariableAccess().getCallVariableKeyword_1());
		}
	)
;

// Entry rule entryRuleCallFunction
entryRuleCallFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallFunctionRule()); }
	iv_ruleCallFunction=ruleCallFunction
	{ $current=$iv_ruleCallFunction.current; }
	EOF;

// Rule CallFunction
ruleCallFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCallFunctionAccess().getCallFunctionAction_0(),
					$current);
			}
		)
		otherlv_1='CallFunction'
		{
			newLeafNode(otherlv_1, grammarAccess.getCallFunctionAccess().getCallFunctionKeyword_1());
		}
	)
;

// Entry rule entryRuleAffectation
entryRuleAffectation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAffectationRule()); }
	iv_ruleAffectation=ruleAffectation
	{ $current=$iv_ruleAffectation.current; }
	EOF;

// Rule Affectation
ruleAffectation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Affectation'
		{
			newLeafNode(otherlv_0, grammarAccess.getAffectationAccess().getAffectationKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAffectationAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='expressionbase'
		{
			newLeafNode(otherlv_2, grammarAccess.getAffectationAccess().getExpressionbaseKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getAffectationAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAffectationAccess().getExpressionbaseExpressionBaseParserRuleCall_4_0());
				}
				lv_expressionbase_4_0=ruleExpressionBase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAffectationRule());
					}
					add(
						$current,
						"expressionbase",
						lv_expressionbase_4_0,
						"org.xtext.example.mydsl2.MyDsl.ExpressionBase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getAffectationAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAffectationAccess().getExpressionbaseExpressionBaseParserRuleCall_5_1_0());
					}
					lv_expressionbase_6_0=ruleExpressionBase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAffectationRule());
						}
						add(
							$current,
							"expressionbase",
							lv_expressionbase_6_0,
							"org.xtext.example.mydsl2.MyDsl.ExpressionBase");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getAffectationAccess().getRightCurlyBracketKeyword_6());
		}
		(
			otherlv_8='callvariable'
			{
				newLeafNode(otherlv_8, grammarAccess.getAffectationAccess().getCallvariableKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAffectationAccess().getCallvariableCallVariableParserRuleCall_7_1_0());
					}
					lv_callvariable_9_0=ruleCallVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAffectationRule());
						}
						set(
							$current,
							"callvariable",
							lv_callvariable_9_0,
							"org.xtext.example.mydsl2.MyDsl.CallVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getAffectationAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRulePrimaryExprBool
entryRulePrimaryExprBool returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprBoolRule()); }
	iv_rulePrimaryExprBool=rulePrimaryExprBool
	{ $current=$iv_rulePrimaryExprBool.current; }
	EOF;

// Rule PrimaryExprBool
rulePrimaryExprBool returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPrimaryExprBoolAccess().getPrimaryExprBoolAction_0(),
					$current);
			}
		)
		otherlv_1='PrimaryExprBool'
		{
			newLeafNode(otherlv_1, grammarAccess.getPrimaryExprBoolAccess().getPrimaryExprBoolKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPrimaryExprBoolAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='type'
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimaryExprBoolAccess().getTypeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprBoolAccess().getTypeTypeClassParserRuleCall_3_1_0());
					}
					lv_type_4_0=ruleTypeClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprBoolRule());
						}
						set(
							$current,
							"type",
							lv_type_4_0,
							"org.xtext.example.mydsl2.MyDsl.TypeClass");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='call'
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimaryExprBoolAccess().getCallKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprBoolAccess().getCallCallParserRuleCall_4_1_0());
					}
					lv_call_6_0=ruleCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprBoolRule());
						}
						set(
							$current,
							"call",
							lv_call_6_0,
							"org.xtext.example.mydsl2.MyDsl.Call");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getPrimaryExprBoolAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	iv_ruleAnd=ruleAnd
	{ $current=$iv_ruleAnd.current; }
	EOF;

// Rule And
ruleAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAndAccess().getAndAction_0(),
					$current);
			}
		)
		otherlv_1='And'
		{
			newLeafNode(otherlv_1, grammarAccess.getAndAccess().getAndKeyword_1());
		}
	)
;

// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	iv_ruleOr=ruleOr
	{ $current=$iv_ruleOr.current; }
	EOF;

// Rule Or
ruleOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOrAccess().getOrAction_0(),
					$current);
			}
		)
		otherlv_1='Or'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrAccess().getOrKeyword_1());
		}
	)
;

// Entry rule entryRuleNot
entryRuleNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotRule()); }
	iv_ruleNot=ruleNot
	{ $current=$iv_ruleNot.current; }
	EOF;

// Rule Not
ruleNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNotAccess().getNotAction_0(),
					$current);
			}
		)
		otherlv_1='Not'
		{
			newLeafNode(otherlv_1, grammarAccess.getNotAccess().getNotKeyword_1());
		}
	)
;

// Entry rule entryRuleEquals
entryRuleEquals returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualsRule()); }
	iv_ruleEquals=ruleEquals
	{ $current=$iv_ruleEquals.current; }
	EOF;

// Rule Equals
ruleEquals returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEqualsAccess().getEqualsAction_0(),
					$current);
			}
		)
		otherlv_1='Equals'
		{
			newLeafNode(otherlv_1, grammarAccess.getEqualsAccess().getEqualsKeyword_1());
		}
	)
;

// Entry rule entryRulePlusMinusDistance
entryRulePlusMinusDistance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusMinusDistanceRule()); }
	iv_rulePlusMinusDistance=rulePlusMinusDistance
	{ $current=$iv_rulePlusMinusDistance.current; }
	EOF;

// Rule PlusMinusDistance
rulePlusMinusDistance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPlusMinusDistanceAccess().getPlusMinusDistanceAction_0(),
					$current);
			}
		)
		otherlv_1='PlusMinusDistance'
		{
			newLeafNode(otherlv_1, grammarAccess.getPlusMinusDistanceAccess().getPlusMinusDistanceKeyword_1());
		}
	)
;

// Entry rule entryRuleMultDivDistance
entryRuleMultDivDistance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultDivDistanceRule()); }
	iv_ruleMultDivDistance=ruleMultDivDistance
	{ $current=$iv_ruleMultDivDistance.current; }
	EOF;

// Rule MultDivDistance
ruleMultDivDistance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMultDivDistanceAccess().getMultDivDistanceAction_0(),
					$current);
			}
		)
		otherlv_1='MultDivDistance'
		{
			newLeafNode(otherlv_1, grammarAccess.getMultDivDistanceAccess().getMultDivDistanceKeyword_1());
		}
	)
;

// Entry rule entryRulePrimaryExprDistance
entryRulePrimaryExprDistance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprDistanceRule()); }
	iv_rulePrimaryExprDistance=rulePrimaryExprDistance
	{ $current=$iv_rulePrimaryExprDistance.current; }
	EOF;

// Rule PrimaryExprDistance
rulePrimaryExprDistance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPrimaryExprDistanceAccess().getPrimaryExprDistanceAction_0(),
					$current);
			}
		)
		otherlv_1='PrimaryExprDistance'
		{
			newLeafNode(otherlv_1, grammarAccess.getPrimaryExprDistanceAccess().getPrimaryExprDistanceKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPrimaryExprDistanceAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='distance'
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimaryExprDistanceAccess().getDistanceKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprDistanceAccess().getDistanceDistanceParserRuleCall_3_1_0());
					}
					lv_distance_4_0=ruleDistance
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprDistanceRule());
						}
						set(
							$current,
							"distance",
							lv_distance_4_0,
							"org.xtext.example.mydsl2.MyDsl.Distance");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getPrimaryExprDistanceAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulePlusMinusTime
entryRulePlusMinusTime returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusMinusTimeRule()); }
	iv_rulePlusMinusTime=rulePlusMinusTime
	{ $current=$iv_rulePlusMinusTime.current; }
	EOF;

// Rule PlusMinusTime
rulePlusMinusTime returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPlusMinusTimeAccess().getPlusMinusTimeAction_0(),
					$current);
			}
		)
		otherlv_1='PlusMinusTime'
		{
			newLeafNode(otherlv_1, grammarAccess.getPlusMinusTimeAccess().getPlusMinusTimeKeyword_1());
		}
	)
;

// Entry rule entryRuleMultDiveTime
entryRuleMultDiveTime returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultDiveTimeRule()); }
	iv_ruleMultDiveTime=ruleMultDiveTime
	{ $current=$iv_ruleMultDiveTime.current; }
	EOF;

// Rule MultDiveTime
ruleMultDiveTime returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMultDiveTimeAccess().getMultDiveTimeAction_0(),
					$current);
			}
		)
		otherlv_1='MultDiveTime'
		{
			newLeafNode(otherlv_1, grammarAccess.getMultDiveTimeAccess().getMultDiveTimeKeyword_1());
		}
	)
;

// Entry rule entryRulePrimaryExprTime
entryRulePrimaryExprTime returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprTimeRule()); }
	iv_rulePrimaryExprTime=rulePrimaryExprTime
	{ $current=$iv_rulePrimaryExprTime.current; }
	EOF;

// Rule PrimaryExprTime
rulePrimaryExprTime returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPrimaryExprTimeAccess().getPrimaryExprTimeAction_0(),
					$current);
			}
		)
		otherlv_1='PrimaryExprTime'
		{
			newLeafNode(otherlv_1, grammarAccess.getPrimaryExprTimeAccess().getPrimaryExprTimeKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPrimaryExprTimeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='time'
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimaryExprTimeAccess().getTimeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprTimeAccess().getTimeTimeParserRuleCall_3_1_0());
					}
					lv_time_4_0=ruleTime
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprTimeRule());
						}
						set(
							$current,
							"time",
							lv_time_4_0,
							"org.xtext.example.mydsl2.MyDsl.Time");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getPrimaryExprTimeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleComparaisonDistance
entryRuleComparaisonDistance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparaisonDistanceRule()); }
	iv_ruleComparaisonDistance=ruleComparaisonDistance
	{ $current=$iv_ruleComparaisonDistance.current; }
	EOF;

// Rule ComparaisonDistance
ruleComparaisonDistance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getComparaisonDistanceAccess().getComparaisonDistanceAction_0(),
					$current);
			}
		)
		otherlv_1='ComparaisonDistance'
		{
			newLeafNode(otherlv_1, grammarAccess.getComparaisonDistanceAccess().getComparaisonDistanceKeyword_1());
		}
	)
;

// Entry rule entryRuleComparaisonTime
entryRuleComparaisonTime returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparaisonTimeRule()); }
	iv_ruleComparaisonTime=ruleComparaisonTime
	{ $current=$iv_ruleComparaisonTime.current; }
	EOF;

// Rule ComparaisonTime
ruleComparaisonTime returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getComparaisonTimeAccess().getComparaisonTimeAction_0(),
					$current);
			}
		)
		otherlv_1='ComparaisonTime'
		{
			newLeafNode(otherlv_1, grammarAccess.getComparaisonTimeAccess().getComparaisonTimeKeyword_1());
		}
	)
;

// Entry rule entryRuleComparaisonAri
entryRuleComparaisonAri returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparaisonAriRule()); }
	iv_ruleComparaisonAri=ruleComparaisonAri
	{ $current=$iv_ruleComparaisonAri.current; }
	EOF;

// Rule ComparaisonAri
ruleComparaisonAri returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getComparaisonAriAccess().getComparaisonAriAction_0(),
					$current);
			}
		)
		otherlv_1='ComparaisonAri'
		{
			newLeafNode(otherlv_1, grammarAccess.getComparaisonAriAccess().getComparaisonAriKeyword_1());
		}
	)
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

// Entry rule entryRuleCM
entryRuleCM returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCMRule()); }
	iv_ruleCM=ruleCM
	{ $current=$iv_ruleCM.current; }
	EOF;

// Rule CM
ruleCM returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCMAccess().getCMAction_0(),
					$current);
			}
		)
		otherlv_1='CM'
		{
			newLeafNode(otherlv_1, grammarAccess.getCMAccess().getCMKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCMAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='distance'
			{
				newLeafNode(otherlv_3, grammarAccess.getCMAccess().getDistanceKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCMAccess().getDistanceEDoubleParserRuleCall_3_1_0());
					}
					lv_distance_4_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCMRule());
						}
						set(
							$current,
							"distance",
							lv_distance_4_0,
							"org.xtext.example.mydsl2.MyDsl.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getCMAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulemm
entryRulemm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMmRule()); }
	iv_rulemm=rulemm
	{ $current=$iv_rulemm.current; }
	EOF;

// Rule mm
rulemm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMmAccess().getMmAction_0(),
					$current);
			}
		)
		otherlv_1='mm'
		{
			newLeafNode(otherlv_1, grammarAccess.getMmAccess().getMmKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMmAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='distance'
			{
				newLeafNode(otherlv_3, grammarAccess.getMmAccess().getDistanceKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMmAccess().getDistanceEDoubleParserRuleCall_3_1_0());
					}
					lv_distance_4_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMmRule());
						}
						set(
							$current,
							"distance",
							lv_distance_4_0,
							"org.xtext.example.mydsl2.MyDsl.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getMmAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleTime
entryRuleTime returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeRule()); }
	iv_ruleTime=ruleTime
	{ $current=$iv_ruleTime.current; }
	EOF;

// Rule Time
ruleTime returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTimeAccess().getTimeAction_0(),
					$current);
			}
		)
		otherlv_1='Time'
		{
			newLeafNode(otherlv_1, grammarAccess.getTimeAccess().getTimeKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTimeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='value'
			{
				newLeafNode(otherlv_3, grammarAccess.getTimeAccess().getValueKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTimeAccess().getValueEDoubleParserRuleCall_3_1_0());
					}
					lv_value_4_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTimeRule());
						}
						set(
							$current,
							"value",
							lv_value_4_0,
							"org.xtext.example.mydsl2.MyDsl.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getTimeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleBooleanType
entryRuleBooleanType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanTypeRule()); }
	iv_ruleBooleanType=ruleBooleanType
	{ $current=$iv_ruleBooleanType.current; }
	EOF;

// Rule BooleanType
ruleBooleanType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanTypeAccess().getBooleanTypeAction_0(),
					$current);
			}
		)
		(
			(
				lv_value_1_0='value'
				{
					newLeafNode(lv_value_1_0, grammarAccess.getBooleanTypeAccess().getValueValueKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_1_0 != null, "value");
				}
			)
		)?
		otherlv_2='BooleanType'
		{
			newLeafNode(otherlv_2, grammarAccess.getBooleanTypeAccess().getBooleanTypeKeyword_2());
		}
	)
;

// Entry rule entryRuleNumberType
entryRuleNumberType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberTypeRule()); }
	iv_ruleNumberType=ruleNumberType
	{ $current=$iv_ruleNumberType.current; }
	EOF;

// Rule NumberType
ruleNumberType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNumberTypeAccess().getNumberTypeAction_0(),
					$current);
			}
		)
		otherlv_1='NumberType'
		{
			newLeafNode(otherlv_1, grammarAccess.getNumberTypeAccess().getNumberTypeKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getNumberTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='value'
			{
				newLeafNode(otherlv_3, grammarAccess.getNumberTypeAccess().getValueKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNumberTypeAccess().getValueEDoubleParserRuleCall_3_1_0());
					}
					lv_value_4_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNumberTypeRule());
						}
						set(
							$current,
							"value",
							lv_value_4_0,
							"org.xtext.example.mydsl2.MyDsl.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getNumberTypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
